// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Action.pb.h"

@implementation ActionRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ActionRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BasicRoot registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBActivityTypeIsValidValue(PBActivityType value) {
  switch (value) {
    case PBActivityTypeParty:
    case PBActivityTypeTraffic:
    case PBActivityTypeShopping:
      return YES;
    default:
      return NO;
  }
}
BOOL PBActionTypeIsValidValue(PBActionType value) {
  switch (value) {
    case PBActionTypeActivity:
    case PBActionTypeShare:
    case PBActionTypeJoin:
      return YES;
    default:
      return NO;
  }
}
BOOL PBActionStatusIsValidValue(PBActionStatus value) {
  switch (value) {
    case PBActionStatusNormal:
    case PBActionStatusDeleted:
    case PBActionStatusMark:
      return YES;
    default:
      return NO;
  }
}
BOOL PBPromotionStatusIsValidValue(PBPromotionStatus value) {
  switch (value) {
    case PBPromotionStatusRunning:
    case PBPromotionStatusEnd:
    case PBPromotionStatusPendding:
      return YES;
    default:
      return NO;
  }
}
BOOL PBPayTypeIsValidValue(PBPayType value) {
  switch (value) {
    case PBPayTypeAa:
    case PBPayTypeFree:
    case PBPayTypeOther:
      return YES;
    default:
      return NO;
  }
}
@interface PBAlbum ()
@property (retain) NSString* albumId;
@property (retain) PBBriefUser* user;
@property (retain) NSString* name;
@property (retain) NSMutableArray* mutableImageListList;
@end

@implementation PBAlbum

- (BOOL) hasAlbumId {
  return !!hasAlbumId_;
}
- (void) setHasAlbumId:(BOOL) value {
  hasAlbumId_ = !!value;
}
@synthesize albumId;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
@synthesize mutableImageListList;
- (void) dealloc {
  self.albumId = nil;
  self.user = nil;
  self.name = nil;
  self.mutableImageListList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.albumId = @"";
    self.user = [PBBriefUser defaultInstance];
    self.name = @"";
  }
  return self;
}
static PBAlbum* defaultPBAlbumInstance = nil;
+ (void) initialize {
  if (self == [PBAlbum class]) {
    defaultPBAlbumInstance = [[PBAlbum alloc] init];
  }
}
+ (PBAlbum*) defaultInstance {
  return defaultPBAlbumInstance;
}
- (PBAlbum*) defaultInstance {
  return defaultPBAlbumInstance;
}
- (NSArray*) imageListList {
  return mutableImageListList;
}
- (NSString*) imageListAtIndex:(int32_t) index {
  id value = [mutableImageListList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasAlbumId) {
    return NO;
  }
  if (self.hasUser) {
    if (!self.user.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAlbumId) {
    [output writeString:1 value:self.albumId];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  for (NSString* element in self.mutableImageListList) {
    [output writeString:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasAlbumId) {
    size += computeStringSize(1, self.albumId);
  }
  if (self.hasUser) {
    size += computeMessageSize(2, self.user);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableImageListList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableImageListList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBAlbum*) parseFromData:(NSData*) data {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromData:data] build];
}
+ (PBAlbum*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBAlbum*) parseFromInputStream:(NSInputStream*) input {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromInputStream:input] build];
}
+ (PBAlbum*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAlbum*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromCodedInputStream:input] build];
}
+ (PBAlbum*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAlbum*)[[[PBAlbum builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAlbum_Builder*) builder {
  return [[[PBAlbum_Builder alloc] init] autorelease];
}
+ (PBAlbum_Builder*) builderWithPrototype:(PBAlbum*) prototype {
  return [[PBAlbum builder] mergeFrom:prototype];
}
- (PBAlbum_Builder*) builder {
  return [PBAlbum builder];
}
@end

@interface PBAlbum_Builder()
@property (retain) PBAlbum* result;
@end

@implementation PBAlbum_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBAlbum alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBAlbum_Builder*) clear {
  self.result = [[[PBAlbum alloc] init] autorelease];
  return self;
}
- (PBAlbum_Builder*) clone {
  return [PBAlbum builderWithPrototype:result];
}
- (PBAlbum*) defaultInstance {
  return [PBAlbum defaultInstance];
}
- (PBAlbum*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBAlbum*) buildPartial {
  PBAlbum* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBAlbum_Builder*) mergeFrom:(PBAlbum*) other {
  if (other == [PBAlbum defaultInstance]) {
    return self;
  }
  if (other.hasAlbumId) {
    [self setAlbumId:other.albumId];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.mutableImageListList.count > 0) {
    if (result.mutableImageListList == nil) {
      result.mutableImageListList = [NSMutableArray array];
    }
    [result.mutableImageListList addObjectsFromArray:other.mutableImageListList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBAlbum_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBAlbum_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAlbumId:[input readString]];
        break;
      }
      case 18: {
        PBBriefUser_Builder* subBuilder = [PBBriefUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self addImageList:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAlbumId {
  return result.hasAlbumId;
}
- (NSString*) albumId {
  return result.albumId;
}
- (PBAlbum_Builder*) setAlbumId:(NSString*) value {
  result.hasAlbumId = YES;
  result.albumId = value;
  return self;
}
- (PBAlbum_Builder*) clearAlbumId {
  result.hasAlbumId = NO;
  result.albumId = @"";
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (PBBriefUser*) user {
  return result.user;
}
- (PBAlbum_Builder*) setUser:(PBBriefUser*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PBAlbum_Builder*) setUserBuilder:(PBBriefUser_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PBAlbum_Builder*) mergeUser:(PBBriefUser*) value {
  if (result.hasUser &&
      result.user != [PBBriefUser defaultInstance]) {
    result.user =
      [[[PBBriefUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PBAlbum_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [PBBriefUser defaultInstance];
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBAlbum_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBAlbum_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (NSArray*) imageListList {
  if (result.mutableImageListList == nil) {
    return [NSArray array];
  }
  return result.mutableImageListList;
}
- (NSString*) imageListAtIndex:(int32_t) index {
  return [result imageListAtIndex:index];
}
- (PBAlbum_Builder*) replaceImageListAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableImageListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBAlbum_Builder*) addImageList:(NSString*) value {
  if (result.mutableImageListList == nil) {
    result.mutableImageListList = [NSMutableArray array];
  }
  [result.mutableImageListList addObject:value];
  return self;
}
- (PBAlbum_Builder*) addAllImageList:(NSArray*) values {
  if (result.mutableImageListList == nil) {
    result.mutableImageListList = [NSMutableArray array];
  }
  [result.mutableImageListList addObjectsFromArray:values];
  return self;
}
- (PBAlbum_Builder*) clearImageListList {
  result.mutableImageListList = nil;
  return self;
}
@end

@interface PBPromotion ()
@property (retain) NSString* promotionId;
@property int32_t startDate;
@property int32_t endDate;
@property (retain) NSString* title;
@property (retain) NSString* content;
@property PBPromotionStatus status;
@property (retain) NSString* merchantId;
@end

@implementation PBPromotion

- (BOOL) hasPromotionId {
  return !!hasPromotionId_;
}
- (void) setHasPromotionId:(BOOL) value {
  hasPromotionId_ = !!value;
}
@synthesize promotionId;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value {
  hasStartDate_ = !!value;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value {
  hasEndDate_ = !!value;
}
@synthesize endDate;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasMerchantId {
  return !!hasMerchantId_;
}
- (void) setHasMerchantId:(BOOL) value {
  hasMerchantId_ = !!value;
}
@synthesize merchantId;
- (void) dealloc {
  self.promotionId = nil;
  self.title = nil;
  self.content = nil;
  self.merchantId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.promotionId = @"";
    self.startDate = 0;
    self.endDate = 0;
    self.title = @"";
    self.content = @"";
    self.status = PBPromotionStatusRunning;
    self.merchantId = @"";
  }
  return self;
}
static PBPromotion* defaultPBPromotionInstance = nil;
+ (void) initialize {
  if (self == [PBPromotion class]) {
    defaultPBPromotionInstance = [[PBPromotion alloc] init];
  }
}
+ (PBPromotion*) defaultInstance {
  return defaultPBPromotionInstance;
}
- (PBPromotion*) defaultInstance {
  return defaultPBPromotionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPromotionId) {
    return NO;
  }
  if (!self.hasStartDate) {
    return NO;
  }
  if (!self.hasEndDate) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPromotionId) {
    [output writeString:1 value:self.promotionId];
  }
  if (self.hasStartDate) {
    [output writeInt32:2 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeInt32:3 value:self.endDate];
  }
  if (self.hasTitle) {
    [output writeString:4 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasStatus) {
    [output writeEnum:6 value:self.status];
  }
  if (self.hasMerchantId) {
    [output writeString:7 value:self.merchantId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPromotionId) {
    size += computeStringSize(1, self.promotionId);
  }
  if (self.hasStartDate) {
    size += computeInt32Size(2, self.startDate);
  }
  if (self.hasEndDate) {
    size += computeInt32Size(3, self.endDate);
  }
  if (self.hasTitle) {
    size += computeStringSize(4, self.title);
  }
  if (self.hasContent) {
    size += computeStringSize(5, self.content);
  }
  if (self.hasStatus) {
    size += computeEnumSize(6, self.status);
  }
  if (self.hasMerchantId) {
    size += computeStringSize(7, self.merchantId);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBPromotion*) parseFromData:(NSData*) data {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromData:data] build];
}
+ (PBPromotion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBPromotion*) parseFromInputStream:(NSInputStream*) input {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromInputStream:input] build];
}
+ (PBPromotion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPromotion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromCodedInputStream:input] build];
}
+ (PBPromotion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBPromotion*)[[[PBPromotion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBPromotion_Builder*) builder {
  return [[[PBPromotion_Builder alloc] init] autorelease];
}
+ (PBPromotion_Builder*) builderWithPrototype:(PBPromotion*) prototype {
  return [[PBPromotion builder] mergeFrom:prototype];
}
- (PBPromotion_Builder*) builder {
  return [PBPromotion builder];
}
@end

@interface PBPromotion_Builder()
@property (retain) PBPromotion* result;
@end

@implementation PBPromotion_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBPromotion alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBPromotion_Builder*) clear {
  self.result = [[[PBPromotion alloc] init] autorelease];
  return self;
}
- (PBPromotion_Builder*) clone {
  return [PBPromotion builderWithPrototype:result];
}
- (PBPromotion*) defaultInstance {
  return [PBPromotion defaultInstance];
}
- (PBPromotion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBPromotion*) buildPartial {
  PBPromotion* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBPromotion_Builder*) mergeFrom:(PBPromotion*) other {
  if (other == [PBPromotion defaultInstance]) {
    return self;
  }
  if (other.hasPromotionId) {
    [self setPromotionId:other.promotionId];
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasMerchantId) {
    [self setMerchantId:other.merchantId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBPromotion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBPromotion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPromotionId:[input readString]];
        break;
      }
      case 16: {
        [self setStartDate:[input readInt32]];
        break;
      }
      case 24: {
        [self setEndDate:[input readInt32]];
        break;
      }
      case 34: {
        [self setTitle:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (PBPromotionStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        [self setMerchantId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPromotionId {
  return result.hasPromotionId;
}
- (NSString*) promotionId {
  return result.promotionId;
}
- (PBPromotion_Builder*) setPromotionId:(NSString*) value {
  result.hasPromotionId = YES;
  result.promotionId = value;
  return self;
}
- (PBPromotion_Builder*) clearPromotionId {
  result.hasPromotionId = NO;
  result.promotionId = @"";
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (int32_t) startDate {
  return result.startDate;
}
- (PBPromotion_Builder*) setStartDate:(int32_t) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (PBPromotion_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = 0;
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (int32_t) endDate {
  return result.endDate;
}
- (PBPromotion_Builder*) setEndDate:(int32_t) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (PBPromotion_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = 0;
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (PBPromotion_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (PBPromotion_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PBPromotion_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBPromotion_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBPromotionStatus) status {
  return result.status;
}
- (PBPromotion_Builder*) setStatus:(PBPromotionStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBPromotion_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBPromotionStatusRunning;
  return self;
}
- (BOOL) hasMerchantId {
  return result.hasMerchantId;
}
- (NSString*) merchantId {
  return result.merchantId;
}
- (PBPromotion_Builder*) setMerchantId:(NSString*) value {
  result.hasMerchantId = YES;
  result.merchantId = value;
  return self;
}
- (PBPromotion_Builder*) clearMerchantId {
  result.hasMerchantId = NO;
  result.merchantId = @"";
  return self;
}
@end

@interface PBMerchant ()
@property (retain) NSString* merchantId;
@property (retain) NSString* aibangId;
@property (retain) NSString* name;
@property (retain) NSString* county;
@property (retain) NSString* addr;
@property (retain) NSString* tel;
@property (retain) NSString* cate;
@property Float32 rate;
@property int32_t cost;
@property (retain) NSString* desc;
@property Float32 lng;
@property Float32 lat;
@property (retain) NSString* workTime;
@property (retain) NSString* siteUrl;
@property (retain) NSString* webUrl;
@property (retain) NSString* wapUrl;
@property (retain) NSString* imgUrl;
@property (retain) NSMutableArray* mutablePromotionsList;
@property (retain) NSMutableArray* mutablePromotionIdsList;
@end

@implementation PBMerchant

- (BOOL) hasMerchantId {
  return !!hasMerchantId_;
}
- (void) setHasMerchantId:(BOOL) value {
  hasMerchantId_ = !!value;
}
@synthesize merchantId;
- (BOOL) hasAibangId {
  return !!hasAibangId_;
}
- (void) setHasAibangId:(BOOL) value {
  hasAibangId_ = !!value;
}
@synthesize aibangId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasCounty {
  return !!hasCounty_;
}
- (void) setHasCounty:(BOOL) value {
  hasCounty_ = !!value;
}
@synthesize county;
- (BOOL) hasAddr {
  return !!hasAddr_;
}
- (void) setHasAddr:(BOOL) value {
  hasAddr_ = !!value;
}
@synthesize addr;
- (BOOL) hasTel {
  return !!hasTel_;
}
- (void) setHasTel:(BOOL) value {
  hasTel_ = !!value;
}
@synthesize tel;
- (BOOL) hasCate {
  return !!hasCate_;
}
- (void) setHasCate:(BOOL) value {
  hasCate_ = !!value;
}
@synthesize cate;
- (BOOL) hasRate {
  return !!hasRate_;
}
- (void) setHasRate:(BOOL) value {
  hasRate_ = !!value;
}
@synthesize rate;
- (BOOL) hasCost {
  return !!hasCost_;
}
- (void) setHasCost:(BOOL) value {
  hasCost_ = !!value;
}
@synthesize cost;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) value {
  hasDesc_ = !!value;
}
@synthesize desc;
- (BOOL) hasLng {
  return !!hasLng_;
}
- (void) setHasLng:(BOOL) value {
  hasLng_ = !!value;
}
@synthesize lng;
- (BOOL) hasLat {
  return !!hasLat_;
}
- (void) setHasLat:(BOOL) value {
  hasLat_ = !!value;
}
@synthesize lat;
- (BOOL) hasWorkTime {
  return !!hasWorkTime_;
}
- (void) setHasWorkTime:(BOOL) value {
  hasWorkTime_ = !!value;
}
@synthesize workTime;
- (BOOL) hasSiteUrl {
  return !!hasSiteUrl_;
}
- (void) setHasSiteUrl:(BOOL) value {
  hasSiteUrl_ = !!value;
}
@synthesize siteUrl;
- (BOOL) hasWebUrl {
  return !!hasWebUrl_;
}
- (void) setHasWebUrl:(BOOL) value {
  hasWebUrl_ = !!value;
}
@synthesize webUrl;
- (BOOL) hasWapUrl {
  return !!hasWapUrl_;
}
- (void) setHasWapUrl:(BOOL) value {
  hasWapUrl_ = !!value;
}
@synthesize wapUrl;
- (BOOL) hasImgUrl {
  return !!hasImgUrl_;
}
- (void) setHasImgUrl:(BOOL) value {
  hasImgUrl_ = !!value;
}
@synthesize imgUrl;
@synthesize mutablePromotionsList;
@synthesize mutablePromotionIdsList;
- (void) dealloc {
  self.merchantId = nil;
  self.aibangId = nil;
  self.name = nil;
  self.county = nil;
  self.addr = nil;
  self.tel = nil;
  self.cate = nil;
  self.desc = nil;
  self.workTime = nil;
  self.siteUrl = nil;
  self.webUrl = nil;
  self.wapUrl = nil;
  self.imgUrl = nil;
  self.mutablePromotionsList = nil;
  self.mutablePromotionIdsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.merchantId = @"";
    self.aibangId = @"";
    self.name = @"";
    self.county = @"";
    self.addr = @"";
    self.tel = @"";
    self.cate = @"";
    self.rate = 0;
    self.cost = 0;
    self.desc = @"";
    self.lng = 0;
    self.lat = 0;
    self.workTime = @"";
    self.siteUrl = @"";
    self.webUrl = @"";
    self.wapUrl = @"";
    self.imgUrl = @"";
  }
  return self;
}
static PBMerchant* defaultPBMerchantInstance = nil;
+ (void) initialize {
  if (self == [PBMerchant class]) {
    defaultPBMerchantInstance = [[PBMerchant alloc] init];
  }
}
+ (PBMerchant*) defaultInstance {
  return defaultPBMerchantInstance;
}
- (PBMerchant*) defaultInstance {
  return defaultPBMerchantInstance;
}
- (NSArray*) promotionsList {
  return mutablePromotionsList;
}
- (PBPromotion*) promotionsAtIndex:(int32_t) index {
  id value = [mutablePromotionsList objectAtIndex:index];
  return value;
}
- (NSArray*) promotionIdsList {
  return mutablePromotionIdsList;
}
- (NSString*) promotionIdsAtIndex:(int32_t) index {
  id value = [mutablePromotionIdsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasMerchantId) {
    return NO;
  }
  for (PBPromotion* element in self.promotionsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMerchantId) {
    [output writeString:1 value:self.merchantId];
  }
  if (self.hasAibangId) {
    [output writeString:2 value:self.aibangId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasCounty) {
    [output writeString:4 value:self.county];
  }
  if (self.hasAddr) {
    [output writeString:5 value:self.addr];
  }
  if (self.hasTel) {
    [output writeString:6 value:self.tel];
  }
  if (self.hasCate) {
    [output writeString:8 value:self.cate];
  }
  if (self.hasRate) {
    [output writeFloat:9 value:self.rate];
  }
  if (self.hasCost) {
    [output writeInt32:10 value:self.cost];
  }
  if (self.hasDesc) {
    [output writeString:11 value:self.desc];
  }
  if (self.hasLng) {
    [output writeFloat:12 value:self.lng];
  }
  if (self.hasLat) {
    [output writeFloat:13 value:self.lat];
  }
  if (self.hasWorkTime) {
    [output writeString:14 value:self.workTime];
  }
  if (self.hasSiteUrl) {
    [output writeString:15 value:self.siteUrl];
  }
  if (self.hasWebUrl) {
    [output writeString:16 value:self.webUrl];
  }
  if (self.hasWapUrl) {
    [output writeString:17 value:self.wapUrl];
  }
  if (self.hasImgUrl) {
    [output writeString:18 value:self.imgUrl];
  }
  for (PBPromotion* element in self.promotionsList) {
    [output writeMessage:30 value:element];
  }
  for (NSString* element in self.mutablePromotionIdsList) {
    [output writeString:31 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMerchantId) {
    size += computeStringSize(1, self.merchantId);
  }
  if (self.hasAibangId) {
    size += computeStringSize(2, self.aibangId);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasCounty) {
    size += computeStringSize(4, self.county);
  }
  if (self.hasAddr) {
    size += computeStringSize(5, self.addr);
  }
  if (self.hasTel) {
    size += computeStringSize(6, self.tel);
  }
  if (self.hasCate) {
    size += computeStringSize(8, self.cate);
  }
  if (self.hasRate) {
    size += computeFloatSize(9, self.rate);
  }
  if (self.hasCost) {
    size += computeInt32Size(10, self.cost);
  }
  if (self.hasDesc) {
    size += computeStringSize(11, self.desc);
  }
  if (self.hasLng) {
    size += computeFloatSize(12, self.lng);
  }
  if (self.hasLat) {
    size += computeFloatSize(13, self.lat);
  }
  if (self.hasWorkTime) {
    size += computeStringSize(14, self.workTime);
  }
  if (self.hasSiteUrl) {
    size += computeStringSize(15, self.siteUrl);
  }
  if (self.hasWebUrl) {
    size += computeStringSize(16, self.webUrl);
  }
  if (self.hasWapUrl) {
    size += computeStringSize(17, self.wapUrl);
  }
  if (self.hasImgUrl) {
    size += computeStringSize(18, self.imgUrl);
  }
  for (PBPromotion* element in self.promotionsList) {
    size += computeMessageSize(30, element);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePromotionIdsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 2 * self.mutablePromotionIdsList.count;
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBMerchant*) parseFromData:(NSData*) data {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromData:data] build];
}
+ (PBMerchant*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBMerchant*) parseFromInputStream:(NSInputStream*) input {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromInputStream:input] build];
}
+ (PBMerchant*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBMerchant*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromCodedInputStream:input] build];
}
+ (PBMerchant*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMerchant*)[[[PBMerchant builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBMerchant_Builder*) builder {
  return [[[PBMerchant_Builder alloc] init] autorelease];
}
+ (PBMerchant_Builder*) builderWithPrototype:(PBMerchant*) prototype {
  return [[PBMerchant builder] mergeFrom:prototype];
}
- (PBMerchant_Builder*) builder {
  return [PBMerchant builder];
}
@end

@interface PBMerchant_Builder()
@property (retain) PBMerchant* result;
@end

@implementation PBMerchant_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBMerchant alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBMerchant_Builder*) clear {
  self.result = [[[PBMerchant alloc] init] autorelease];
  return self;
}
- (PBMerchant_Builder*) clone {
  return [PBMerchant builderWithPrototype:result];
}
- (PBMerchant*) defaultInstance {
  return [PBMerchant defaultInstance];
}
- (PBMerchant*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBMerchant*) buildPartial {
  PBMerchant* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBMerchant_Builder*) mergeFrom:(PBMerchant*) other {
  if (other == [PBMerchant defaultInstance]) {
    return self;
  }
  if (other.hasMerchantId) {
    [self setMerchantId:other.merchantId];
  }
  if (other.hasAibangId) {
    [self setAibangId:other.aibangId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasCounty) {
    [self setCounty:other.county];
  }
  if (other.hasAddr) {
    [self setAddr:other.addr];
  }
  if (other.hasTel) {
    [self setTel:other.tel];
  }
  if (other.hasCate) {
    [self setCate:other.cate];
  }
  if (other.hasRate) {
    [self setRate:other.rate];
  }
  if (other.hasCost) {
    [self setCost:other.cost];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.hasLng) {
    [self setLng:other.lng];
  }
  if (other.hasLat) {
    [self setLat:other.lat];
  }
  if (other.hasWorkTime) {
    [self setWorkTime:other.workTime];
  }
  if (other.hasSiteUrl) {
    [self setSiteUrl:other.siteUrl];
  }
  if (other.hasWebUrl) {
    [self setWebUrl:other.webUrl];
  }
  if (other.hasWapUrl) {
    [self setWapUrl:other.wapUrl];
  }
  if (other.hasImgUrl) {
    [self setImgUrl:other.imgUrl];
  }
  if (other.mutablePromotionsList.count > 0) {
    if (result.mutablePromotionsList == nil) {
      result.mutablePromotionsList = [NSMutableArray array];
    }
    [result.mutablePromotionsList addObjectsFromArray:other.mutablePromotionsList];
  }
  if (other.mutablePromotionIdsList.count > 0) {
    if (result.mutablePromotionIdsList == nil) {
      result.mutablePromotionIdsList = [NSMutableArray array];
    }
    [result.mutablePromotionIdsList addObjectsFromArray:other.mutablePromotionIdsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBMerchant_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBMerchant_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMerchantId:[input readString]];
        break;
      }
      case 18: {
        [self setAibangId:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setCounty:[input readString]];
        break;
      }
      case 42: {
        [self setAddr:[input readString]];
        break;
      }
      case 50: {
        [self setTel:[input readString]];
        break;
      }
      case 66: {
        [self setCate:[input readString]];
        break;
      }
      case 77: {
        [self setRate:[input readFloat]];
        break;
      }
      case 80: {
        [self setCost:[input readInt32]];
        break;
      }
      case 90: {
        [self setDesc:[input readString]];
        break;
      }
      case 101: {
        [self setLng:[input readFloat]];
        break;
      }
      case 109: {
        [self setLat:[input readFloat]];
        break;
      }
      case 114: {
        [self setWorkTime:[input readString]];
        break;
      }
      case 122: {
        [self setSiteUrl:[input readString]];
        break;
      }
      case 130: {
        [self setWebUrl:[input readString]];
        break;
      }
      case 138: {
        [self setWapUrl:[input readString]];
        break;
      }
      case 146: {
        [self setImgUrl:[input readString]];
        break;
      }
      case 242: {
        PBPromotion_Builder* subBuilder = [PBPromotion builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPromotions:[subBuilder buildPartial]];
        break;
      }
      case 250: {
        [self addPromotionIds:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMerchantId {
  return result.hasMerchantId;
}
- (NSString*) merchantId {
  return result.merchantId;
}
- (PBMerchant_Builder*) setMerchantId:(NSString*) value {
  result.hasMerchantId = YES;
  result.merchantId = value;
  return self;
}
- (PBMerchant_Builder*) clearMerchantId {
  result.hasMerchantId = NO;
  result.merchantId = @"";
  return self;
}
- (BOOL) hasAibangId {
  return result.hasAibangId;
}
- (NSString*) aibangId {
  return result.aibangId;
}
- (PBMerchant_Builder*) setAibangId:(NSString*) value {
  result.hasAibangId = YES;
  result.aibangId = value;
  return self;
}
- (PBMerchant_Builder*) clearAibangId {
  result.hasAibangId = NO;
  result.aibangId = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (PBMerchant_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (PBMerchant_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasCounty {
  return result.hasCounty;
}
- (NSString*) county {
  return result.county;
}
- (PBMerchant_Builder*) setCounty:(NSString*) value {
  result.hasCounty = YES;
  result.county = value;
  return self;
}
- (PBMerchant_Builder*) clearCounty {
  result.hasCounty = NO;
  result.county = @"";
  return self;
}
- (BOOL) hasAddr {
  return result.hasAddr;
}
- (NSString*) addr {
  return result.addr;
}
- (PBMerchant_Builder*) setAddr:(NSString*) value {
  result.hasAddr = YES;
  result.addr = value;
  return self;
}
- (PBMerchant_Builder*) clearAddr {
  result.hasAddr = NO;
  result.addr = @"";
  return self;
}
- (BOOL) hasTel {
  return result.hasTel;
}
- (NSString*) tel {
  return result.tel;
}
- (PBMerchant_Builder*) setTel:(NSString*) value {
  result.hasTel = YES;
  result.tel = value;
  return self;
}
- (PBMerchant_Builder*) clearTel {
  result.hasTel = NO;
  result.tel = @"";
  return self;
}
- (BOOL) hasCate {
  return result.hasCate;
}
- (NSString*) cate {
  return result.cate;
}
- (PBMerchant_Builder*) setCate:(NSString*) value {
  result.hasCate = YES;
  result.cate = value;
  return self;
}
- (PBMerchant_Builder*) clearCate {
  result.hasCate = NO;
  result.cate = @"";
  return self;
}
- (BOOL) hasRate {
  return result.hasRate;
}
- (Float32) rate {
  return result.rate;
}
- (PBMerchant_Builder*) setRate:(Float32) value {
  result.hasRate = YES;
  result.rate = value;
  return self;
}
- (PBMerchant_Builder*) clearRate {
  result.hasRate = NO;
  result.rate = 0;
  return self;
}
- (BOOL) hasCost {
  return result.hasCost;
}
- (int32_t) cost {
  return result.cost;
}
- (PBMerchant_Builder*) setCost:(int32_t) value {
  result.hasCost = YES;
  result.cost = value;
  return self;
}
- (PBMerchant_Builder*) clearCost {
  result.hasCost = NO;
  result.cost = 0;
  return self;
}
- (BOOL) hasDesc {
  return result.hasDesc;
}
- (NSString*) desc {
  return result.desc;
}
- (PBMerchant_Builder*) setDesc:(NSString*) value {
  result.hasDesc = YES;
  result.desc = value;
  return self;
}
- (PBMerchant_Builder*) clearDesc {
  result.hasDesc = NO;
  result.desc = @"";
  return self;
}
- (BOOL) hasLng {
  return result.hasLng;
}
- (Float32) lng {
  return result.lng;
}
- (PBMerchant_Builder*) setLng:(Float32) value {
  result.hasLng = YES;
  result.lng = value;
  return self;
}
- (PBMerchant_Builder*) clearLng {
  result.hasLng = NO;
  result.lng = 0;
  return self;
}
- (BOOL) hasLat {
  return result.hasLat;
}
- (Float32) lat {
  return result.lat;
}
- (PBMerchant_Builder*) setLat:(Float32) value {
  result.hasLat = YES;
  result.lat = value;
  return self;
}
- (PBMerchant_Builder*) clearLat {
  result.hasLat = NO;
  result.lat = 0;
  return self;
}
- (BOOL) hasWorkTime {
  return result.hasWorkTime;
}
- (NSString*) workTime {
  return result.workTime;
}
- (PBMerchant_Builder*) setWorkTime:(NSString*) value {
  result.hasWorkTime = YES;
  result.workTime = value;
  return self;
}
- (PBMerchant_Builder*) clearWorkTime {
  result.hasWorkTime = NO;
  result.workTime = @"";
  return self;
}
- (BOOL) hasSiteUrl {
  return result.hasSiteUrl;
}
- (NSString*) siteUrl {
  return result.siteUrl;
}
- (PBMerchant_Builder*) setSiteUrl:(NSString*) value {
  result.hasSiteUrl = YES;
  result.siteUrl = value;
  return self;
}
- (PBMerchant_Builder*) clearSiteUrl {
  result.hasSiteUrl = NO;
  result.siteUrl = @"";
  return self;
}
- (BOOL) hasWebUrl {
  return result.hasWebUrl;
}
- (NSString*) webUrl {
  return result.webUrl;
}
- (PBMerchant_Builder*) setWebUrl:(NSString*) value {
  result.hasWebUrl = YES;
  result.webUrl = value;
  return self;
}
- (PBMerchant_Builder*) clearWebUrl {
  result.hasWebUrl = NO;
  result.webUrl = @"";
  return self;
}
- (BOOL) hasWapUrl {
  return result.hasWapUrl;
}
- (NSString*) wapUrl {
  return result.wapUrl;
}
- (PBMerchant_Builder*) setWapUrl:(NSString*) value {
  result.hasWapUrl = YES;
  result.wapUrl = value;
  return self;
}
- (PBMerchant_Builder*) clearWapUrl {
  result.hasWapUrl = NO;
  result.wapUrl = @"";
  return self;
}
- (BOOL) hasImgUrl {
  return result.hasImgUrl;
}
- (NSString*) imgUrl {
  return result.imgUrl;
}
- (PBMerchant_Builder*) setImgUrl:(NSString*) value {
  result.hasImgUrl = YES;
  result.imgUrl = value;
  return self;
}
- (PBMerchant_Builder*) clearImgUrl {
  result.hasImgUrl = NO;
  result.imgUrl = @"";
  return self;
}
- (NSArray*) promotionsList {
  if (result.mutablePromotionsList == nil) { return [NSArray array]; }
  return result.mutablePromotionsList;
}
- (PBPromotion*) promotionsAtIndex:(int32_t) index {
  return [result promotionsAtIndex:index];
}
- (PBMerchant_Builder*) replacePromotionsAtIndex:(int32_t) index with:(PBPromotion*) value {
  [result.mutablePromotionsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBMerchant_Builder*) addAllPromotions:(NSArray*) values {
  if (result.mutablePromotionsList == nil) {
    result.mutablePromotionsList = [NSMutableArray array];
  }
  [result.mutablePromotionsList addObjectsFromArray:values];
  return self;
}
- (PBMerchant_Builder*) clearPromotionsList {
  result.mutablePromotionsList = nil;
  return self;
}
- (PBMerchant_Builder*) addPromotions:(PBPromotion*) value {
  if (result.mutablePromotionsList == nil) {
    result.mutablePromotionsList = [NSMutableArray array];
  }
  [result.mutablePromotionsList addObject:value];
  return self;
}
- (NSArray*) promotionIdsList {
  if (result.mutablePromotionIdsList == nil) {
    return [NSArray array];
  }
  return result.mutablePromotionIdsList;
}
- (NSString*) promotionIdsAtIndex:(int32_t) index {
  return [result promotionIdsAtIndex:index];
}
- (PBMerchant_Builder*) replacePromotionIdsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePromotionIdsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBMerchant_Builder*) addPromotionIds:(NSString*) value {
  if (result.mutablePromotionIdsList == nil) {
    result.mutablePromotionIdsList = [NSMutableArray array];
  }
  [result.mutablePromotionIdsList addObject:value];
  return self;
}
- (PBMerchant_Builder*) addAllPromotionIds:(NSArray*) values {
  if (result.mutablePromotionIdsList == nil) {
    result.mutablePromotionIdsList = [NSMutableArray array];
  }
  [result.mutablePromotionIdsList addObjectsFromArray:values];
  return self;
}
- (PBMerchant_Builder*) clearPromotionIdsList {
  result.mutablePromotionIdsList = nil;
  return self;
}
@end

@interface PBActivity ()
@property PBActivityType type;
@property (retain) NSString* token;
@property (retain) PBContact* content;
@property int32_t joinDeadtime;
@property int32_t holdDeadtime;
@property PBPayType payType;
@property Float32 budget;
@property Float32 price;
@property int32_t memberLimit;
@property (retain) NSMutableArray* mutablePhotoListList;
@property (retain) NSMutableArray* mutableParticipantsList;
@property (retain) NSMutableArray* mutableSignupsList;
@property int32_t commentCount;
@property int32_t shareCount;
@property int32_t participantCount;
@property int32_t markCount;
@property (retain) PBMerchant* merchant;
@property (retain) PBLocation* location;
@property (retain) PBLocation* startLoc;
@property (retain) PBLocation* endLoc;
@end

@implementation PBActivity

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) value {
  hasToken_ = !!value;
}
@synthesize token;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasJoinDeadtime {
  return !!hasJoinDeadtime_;
}
- (void) setHasJoinDeadtime:(BOOL) value {
  hasJoinDeadtime_ = !!value;
}
@synthesize joinDeadtime;
- (BOOL) hasHoldDeadtime {
  return !!hasHoldDeadtime_;
}
- (void) setHasHoldDeadtime:(BOOL) value {
  hasHoldDeadtime_ = !!value;
}
@synthesize holdDeadtime;
- (BOOL) hasPayType {
  return !!hasPayType_;
}
- (void) setHasPayType:(BOOL) value {
  hasPayType_ = !!value;
}
@synthesize payType;
- (BOOL) hasBudget {
  return !!hasBudget_;
}
- (void) setHasBudget:(BOOL) value {
  hasBudget_ = !!value;
}
@synthesize budget;
- (BOOL) hasPrice {
  return !!hasPrice_;
}
- (void) setHasPrice:(BOOL) value {
  hasPrice_ = !!value;
}
@synthesize price;
- (BOOL) hasMemberLimit {
  return !!hasMemberLimit_;
}
- (void) setHasMemberLimit:(BOOL) value {
  hasMemberLimit_ = !!value;
}
@synthesize memberLimit;
@synthesize mutablePhotoListList;
@synthesize mutableParticipantsList;
@synthesize mutableSignupsList;
- (BOOL) hasCommentCount {
  return !!hasCommentCount_;
}
- (void) setHasCommentCount:(BOOL) value {
  hasCommentCount_ = !!value;
}
@synthesize commentCount;
- (BOOL) hasShareCount {
  return !!hasShareCount_;
}
- (void) setHasShareCount:(BOOL) value {
  hasShareCount_ = !!value;
}
@synthesize shareCount;
- (BOOL) hasParticipantCount {
  return !!hasParticipantCount_;
}
- (void) setHasParticipantCount:(BOOL) value {
  hasParticipantCount_ = !!value;
}
@synthesize participantCount;
- (BOOL) hasMarkCount {
  return !!hasMarkCount_;
}
- (void) setHasMarkCount:(BOOL) value {
  hasMarkCount_ = !!value;
}
@synthesize markCount;
- (BOOL) hasMerchant {
  return !!hasMerchant_;
}
- (void) setHasMerchant:(BOOL) value {
  hasMerchant_ = !!value;
}
@synthesize merchant;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) value {
  hasLocation_ = !!value;
}
@synthesize location;
- (BOOL) hasStartLoc {
  return !!hasStartLoc_;
}
- (void) setHasStartLoc:(BOOL) value {
  hasStartLoc_ = !!value;
}
@synthesize startLoc;
- (BOOL) hasEndLoc {
  return !!hasEndLoc_;
}
- (void) setHasEndLoc:(BOOL) value {
  hasEndLoc_ = !!value;
}
@synthesize endLoc;
- (void) dealloc {
  self.token = nil;
  self.content = nil;
  self.mutablePhotoListList = nil;
  self.mutableParticipantsList = nil;
  self.mutableSignupsList = nil;
  self.merchant = nil;
  self.location = nil;
  self.startLoc = nil;
  self.endLoc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = PBActivityTypeParty;
    self.token = @"";
    self.content = [PBContact defaultInstance];
    self.joinDeadtime = 0;
    self.holdDeadtime = 0;
    self.payType = PBPayTypeAa;
    self.budget = 0;
    self.price = 0;
    self.memberLimit = 0;
    self.commentCount = 0;
    self.shareCount = 0;
    self.participantCount = 0;
    self.markCount = 0;
    self.merchant = [PBMerchant defaultInstance];
    self.location = [PBLocation defaultInstance];
    self.startLoc = [PBLocation defaultInstance];
    self.endLoc = [PBLocation defaultInstance];
  }
  return self;
}
static PBActivity* defaultPBActivityInstance = nil;
+ (void) initialize {
  if (self == [PBActivity class]) {
    defaultPBActivityInstance = [[PBActivity alloc] init];
  }
}
+ (PBActivity*) defaultInstance {
  return defaultPBActivityInstance;
}
- (PBActivity*) defaultInstance {
  return defaultPBActivityInstance;
}
- (NSArray*) photoListList {
  return mutablePhotoListList;
}
- (NSString*) photoListAtIndex:(int32_t) index {
  id value = [mutablePhotoListList objectAtIndex:index];
  return value;
}
- (NSArray*) participantsList {
  return mutableParticipantsList;
}
- (NSString*) participantsAtIndex:(int32_t) index {
  id value = [mutableParticipantsList objectAtIndex:index];
  return value;
}
- (NSArray*) signupsList {
  return mutableSignupsList;
}
- (NSString*) signupsAtIndex:(int32_t) index {
  id value = [mutableSignupsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (self.hasMerchant) {
    if (!self.merchant.isInitialized) {
      return NO;
    }
  }
  if (self.hasLocation) {
    if (!self.location.isInitialized) {
      return NO;
    }
  }
  if (self.hasStartLoc) {
    if (!self.startLoc.isInitialized) {
      return NO;
    }
  }
  if (self.hasEndLoc) {
    if (!self.endLoc.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  if (self.hasContent) {
    [output writeMessage:3 value:self.content];
  }
  if (self.hasJoinDeadtime) {
    [output writeInt32:4 value:self.joinDeadtime];
  }
  if (self.hasHoldDeadtime) {
    [output writeInt32:5 value:self.holdDeadtime];
  }
  if (self.hasPayType) {
    [output writeEnum:7 value:self.payType];
  }
  if (self.hasBudget) {
    [output writeFloat:8 value:self.budget];
  }
  if (self.hasPrice) {
    [output writeFloat:9 value:self.price];
  }
  if (self.hasMemberLimit) {
    [output writeInt32:10 value:self.memberLimit];
  }
  for (NSString* element in self.mutablePhotoListList) {
    [output writeString:11 value:element];
  }
  for (NSString* element in self.mutableParticipantsList) {
    [output writeString:12 value:element];
  }
  for (NSString* element in self.mutableSignupsList) {
    [output writeString:13 value:element];
  }
  if (self.hasCommentCount) {
    [output writeInt32:30 value:self.commentCount];
  }
  if (self.hasShareCount) {
    [output writeInt32:31 value:self.shareCount];
  }
  if (self.hasParticipantCount) {
    [output writeInt32:32 value:self.participantCount];
  }
  if (self.hasMarkCount) {
    [output writeInt32:33 value:self.markCount];
  }
  if (self.hasMerchant) {
    [output writeMessage:50 value:self.merchant];
  }
  if (self.hasLocation) {
    [output writeMessage:51 value:self.location];
  }
  if (self.hasStartLoc) {
    [output writeMessage:70 value:self.startLoc];
  }
  if (self.hasEndLoc) {
    [output writeMessage:71 value:self.endLoc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeEnumSize(1, self.type);
  }
  if (self.hasToken) {
    size += computeStringSize(2, self.token);
  }
  if (self.hasContent) {
    size += computeMessageSize(3, self.content);
  }
  if (self.hasJoinDeadtime) {
    size += computeInt32Size(4, self.joinDeadtime);
  }
  if (self.hasHoldDeadtime) {
    size += computeInt32Size(5, self.holdDeadtime);
  }
  if (self.hasPayType) {
    size += computeEnumSize(7, self.payType);
  }
  if (self.hasBudget) {
    size += computeFloatSize(8, self.budget);
  }
  if (self.hasPrice) {
    size += computeFloatSize(9, self.price);
  }
  if (self.hasMemberLimit) {
    size += computeInt32Size(10, self.memberLimit);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePhotoListList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePhotoListList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableParticipantsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableParticipantsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableSignupsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableSignupsList.count;
  }
  if (self.hasCommentCount) {
    size += computeInt32Size(30, self.commentCount);
  }
  if (self.hasShareCount) {
    size += computeInt32Size(31, self.shareCount);
  }
  if (self.hasParticipantCount) {
    size += computeInt32Size(32, self.participantCount);
  }
  if (self.hasMarkCount) {
    size += computeInt32Size(33, self.markCount);
  }
  if (self.hasMerchant) {
    size += computeMessageSize(50, self.merchant);
  }
  if (self.hasLocation) {
    size += computeMessageSize(51, self.location);
  }
  if (self.hasStartLoc) {
    size += computeMessageSize(70, self.startLoc);
  }
  if (self.hasEndLoc) {
    size += computeMessageSize(71, self.endLoc);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBActivity*) parseFromData:(NSData*) data {
  return (PBActivity*)[[[PBActivity builder] mergeFromData:data] build];
}
+ (PBActivity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActivity*)[[[PBActivity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBActivity*) parseFromInputStream:(NSInputStream*) input {
  return (PBActivity*)[[[PBActivity builder] mergeFromInputStream:input] build];
}
+ (PBActivity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActivity*)[[[PBActivity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBActivity*)[[[PBActivity builder] mergeFromCodedInputStream:input] build];
}
+ (PBActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBActivity*)[[[PBActivity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBActivity_Builder*) builder {
  return [[[PBActivity_Builder alloc] init] autorelease];
}
+ (PBActivity_Builder*) builderWithPrototype:(PBActivity*) prototype {
  return [[PBActivity builder] mergeFrom:prototype];
}
- (PBActivity_Builder*) builder {
  return [PBActivity builder];
}
@end

@interface PBActivity_Builder()
@property (retain) PBActivity* result;
@end

@implementation PBActivity_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBActivity alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBActivity_Builder*) clear {
  self.result = [[[PBActivity alloc] init] autorelease];
  return self;
}
- (PBActivity_Builder*) clone {
  return [PBActivity builderWithPrototype:result];
}
- (PBActivity*) defaultInstance {
  return [PBActivity defaultInstance];
}
- (PBActivity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBActivity*) buildPartial {
  PBActivity* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBActivity_Builder*) mergeFrom:(PBActivity*) other {
  if (other == [PBActivity defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasContent) {
    [self mergeContent:other.content];
  }
  if (other.hasJoinDeadtime) {
    [self setJoinDeadtime:other.joinDeadtime];
  }
  if (other.hasHoldDeadtime) {
    [self setHoldDeadtime:other.holdDeadtime];
  }
  if (other.hasPayType) {
    [self setPayType:other.payType];
  }
  if (other.hasBudget) {
    [self setBudget:other.budget];
  }
  if (other.hasPrice) {
    [self setPrice:other.price];
  }
  if (other.hasMemberLimit) {
    [self setMemberLimit:other.memberLimit];
  }
  if (other.mutablePhotoListList.count > 0) {
    if (result.mutablePhotoListList == nil) {
      result.mutablePhotoListList = [NSMutableArray array];
    }
    [result.mutablePhotoListList addObjectsFromArray:other.mutablePhotoListList];
  }
  if (other.mutableParticipantsList.count > 0) {
    if (result.mutableParticipantsList == nil) {
      result.mutableParticipantsList = [NSMutableArray array];
    }
    [result.mutableParticipantsList addObjectsFromArray:other.mutableParticipantsList];
  }
  if (other.mutableSignupsList.count > 0) {
    if (result.mutableSignupsList == nil) {
      result.mutableSignupsList = [NSMutableArray array];
    }
    [result.mutableSignupsList addObjectsFromArray:other.mutableSignupsList];
  }
  if (other.hasCommentCount) {
    [self setCommentCount:other.commentCount];
  }
  if (other.hasShareCount) {
    [self setShareCount:other.shareCount];
  }
  if (other.hasParticipantCount) {
    [self setParticipantCount:other.participantCount];
  }
  if (other.hasMarkCount) {
    [self setMarkCount:other.markCount];
  }
  if (other.hasMerchant) {
    [self mergeMerchant:other.merchant];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.hasStartLoc) {
    [self mergeStartLoc:other.startLoc];
  }
  if (other.hasEndLoc) {
    [self mergeEndLoc:other.endLoc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBActivity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBActivity_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        int32_t value = [input readEnum];
        if (PBActivityTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
      case 26: {
        PBContact_Builder* subBuilder = [PBContact builder];
        if (self.hasContent) {
          [subBuilder mergeFrom:self.content];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContent:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setJoinDeadtime:[input readInt32]];
        break;
      }
      case 40: {
        [self setHoldDeadtime:[input readInt32]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (PBPayTypeIsValidValue(value)) {
          [self setPayType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 69: {
        [self setBudget:[input readFloat]];
        break;
      }
      case 77: {
        [self setPrice:[input readFloat]];
        break;
      }
      case 80: {
        [self setMemberLimit:[input readInt32]];
        break;
      }
      case 90: {
        [self addPhotoList:[input readString]];
        break;
      }
      case 98: {
        [self addParticipants:[input readString]];
        break;
      }
      case 106: {
        [self addSignups:[input readString]];
        break;
      }
      case 240: {
        [self setCommentCount:[input readInt32]];
        break;
      }
      case 248: {
        [self setShareCount:[input readInt32]];
        break;
      }
      case 256: {
        [self setParticipantCount:[input readInt32]];
        break;
      }
      case 264: {
        [self setMarkCount:[input readInt32]];
        break;
      }
      case 402: {
        PBMerchant_Builder* subBuilder = [PBMerchant builder];
        if (self.hasMerchant) {
          [subBuilder mergeFrom:self.merchant];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMerchant:[subBuilder buildPartial]];
        break;
      }
      case 410: {
        PBLocation_Builder* subBuilder = [PBLocation builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 562: {
        PBLocation_Builder* subBuilder = [PBLocation builder];
        if (self.hasStartLoc) {
          [subBuilder mergeFrom:self.startLoc];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStartLoc:[subBuilder buildPartial]];
        break;
      }
      case 570: {
        PBLocation_Builder* subBuilder = [PBLocation builder];
        if (self.hasEndLoc) {
          [subBuilder mergeFrom:self.endLoc];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEndLoc:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBActivityType) type {
  return result.type;
}
- (PBActivity_Builder*) setType:(PBActivityType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBActivity_Builder*) clearType {
  result.hasType = NO;
  result.type = PBActivityTypeParty;
  return self;
}
- (BOOL) hasToken {
  return result.hasToken;
}
- (NSString*) token {
  return result.token;
}
- (PBActivity_Builder*) setToken:(NSString*) value {
  result.hasToken = YES;
  result.token = value;
  return self;
}
- (PBActivity_Builder*) clearToken {
  result.hasToken = NO;
  result.token = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (PBContact*) content {
  return result.content;
}
- (PBActivity_Builder*) setContent:(PBContact*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBActivity_Builder*) setContentBuilder:(PBContact_Builder*) builderForValue {
  return [self setContent:[builderForValue build]];
}
- (PBActivity_Builder*) mergeContent:(PBContact*) value {
  if (result.hasContent &&
      result.content != [PBContact defaultInstance]) {
    result.content =
      [[[PBContact builderWithPrototype:result.content] mergeFrom:value] buildPartial];
  } else {
    result.content = value;
  }
  result.hasContent = YES;
  return self;
}
- (PBActivity_Builder*) clearContent {
  result.hasContent = NO;
  result.content = [PBContact defaultInstance];
  return self;
}
- (BOOL) hasJoinDeadtime {
  return result.hasJoinDeadtime;
}
- (int32_t) joinDeadtime {
  return result.joinDeadtime;
}
- (PBActivity_Builder*) setJoinDeadtime:(int32_t) value {
  result.hasJoinDeadtime = YES;
  result.joinDeadtime = value;
  return self;
}
- (PBActivity_Builder*) clearJoinDeadtime {
  result.hasJoinDeadtime = NO;
  result.joinDeadtime = 0;
  return self;
}
- (BOOL) hasHoldDeadtime {
  return result.hasHoldDeadtime;
}
- (int32_t) holdDeadtime {
  return result.holdDeadtime;
}
- (PBActivity_Builder*) setHoldDeadtime:(int32_t) value {
  result.hasHoldDeadtime = YES;
  result.holdDeadtime = value;
  return self;
}
- (PBActivity_Builder*) clearHoldDeadtime {
  result.hasHoldDeadtime = NO;
  result.holdDeadtime = 0;
  return self;
}
- (BOOL) hasPayType {
  return result.hasPayType;
}
- (PBPayType) payType {
  return result.payType;
}
- (PBActivity_Builder*) setPayType:(PBPayType) value {
  result.hasPayType = YES;
  result.payType = value;
  return self;
}
- (PBActivity_Builder*) clearPayType {
  result.hasPayType = NO;
  result.payType = PBPayTypeAa;
  return self;
}
- (BOOL) hasBudget {
  return result.hasBudget;
}
- (Float32) budget {
  return result.budget;
}
- (PBActivity_Builder*) setBudget:(Float32) value {
  result.hasBudget = YES;
  result.budget = value;
  return self;
}
- (PBActivity_Builder*) clearBudget {
  result.hasBudget = NO;
  result.budget = 0;
  return self;
}
- (BOOL) hasPrice {
  return result.hasPrice;
}
- (Float32) price {
  return result.price;
}
- (PBActivity_Builder*) setPrice:(Float32) value {
  result.hasPrice = YES;
  result.price = value;
  return self;
}
- (PBActivity_Builder*) clearPrice {
  result.hasPrice = NO;
  result.price = 0;
  return self;
}
- (BOOL) hasMemberLimit {
  return result.hasMemberLimit;
}
- (int32_t) memberLimit {
  return result.memberLimit;
}
- (PBActivity_Builder*) setMemberLimit:(int32_t) value {
  result.hasMemberLimit = YES;
  result.memberLimit = value;
  return self;
}
- (PBActivity_Builder*) clearMemberLimit {
  result.hasMemberLimit = NO;
  result.memberLimit = 0;
  return self;
}
- (NSArray*) photoListList {
  if (result.mutablePhotoListList == nil) {
    return [NSArray array];
  }
  return result.mutablePhotoListList;
}
- (NSString*) photoListAtIndex:(int32_t) index {
  return [result photoListAtIndex:index];
}
- (PBActivity_Builder*) replacePhotoListAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePhotoListList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBActivity_Builder*) addPhotoList:(NSString*) value {
  if (result.mutablePhotoListList == nil) {
    result.mutablePhotoListList = [NSMutableArray array];
  }
  [result.mutablePhotoListList addObject:value];
  return self;
}
- (PBActivity_Builder*) addAllPhotoList:(NSArray*) values {
  if (result.mutablePhotoListList == nil) {
    result.mutablePhotoListList = [NSMutableArray array];
  }
  [result.mutablePhotoListList addObjectsFromArray:values];
  return self;
}
- (PBActivity_Builder*) clearPhotoListList {
  result.mutablePhotoListList = nil;
  return self;
}
- (NSArray*) participantsList {
  if (result.mutableParticipantsList == nil) {
    return [NSArray array];
  }
  return result.mutableParticipantsList;
}
- (NSString*) participantsAtIndex:(int32_t) index {
  return [result participantsAtIndex:index];
}
- (PBActivity_Builder*) replaceParticipantsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableParticipantsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBActivity_Builder*) addParticipants:(NSString*) value {
  if (result.mutableParticipantsList == nil) {
    result.mutableParticipantsList = [NSMutableArray array];
  }
  [result.mutableParticipantsList addObject:value];
  return self;
}
- (PBActivity_Builder*) addAllParticipants:(NSArray*) values {
  if (result.mutableParticipantsList == nil) {
    result.mutableParticipantsList = [NSMutableArray array];
  }
  [result.mutableParticipantsList addObjectsFromArray:values];
  return self;
}
- (PBActivity_Builder*) clearParticipantsList {
  result.mutableParticipantsList = nil;
  return self;
}
- (NSArray*) signupsList {
  if (result.mutableSignupsList == nil) {
    return [NSArray array];
  }
  return result.mutableSignupsList;
}
- (NSString*) signupsAtIndex:(int32_t) index {
  return [result signupsAtIndex:index];
}
- (PBActivity_Builder*) replaceSignupsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableSignupsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBActivity_Builder*) addSignups:(NSString*) value {
  if (result.mutableSignupsList == nil) {
    result.mutableSignupsList = [NSMutableArray array];
  }
  [result.mutableSignupsList addObject:value];
  return self;
}
- (PBActivity_Builder*) addAllSignups:(NSArray*) values {
  if (result.mutableSignupsList == nil) {
    result.mutableSignupsList = [NSMutableArray array];
  }
  [result.mutableSignupsList addObjectsFromArray:values];
  return self;
}
- (PBActivity_Builder*) clearSignupsList {
  result.mutableSignupsList = nil;
  return self;
}
- (BOOL) hasCommentCount {
  return result.hasCommentCount;
}
- (int32_t) commentCount {
  return result.commentCount;
}
- (PBActivity_Builder*) setCommentCount:(int32_t) value {
  result.hasCommentCount = YES;
  result.commentCount = value;
  return self;
}
- (PBActivity_Builder*) clearCommentCount {
  result.hasCommentCount = NO;
  result.commentCount = 0;
  return self;
}
- (BOOL) hasShareCount {
  return result.hasShareCount;
}
- (int32_t) shareCount {
  return result.shareCount;
}
- (PBActivity_Builder*) setShareCount:(int32_t) value {
  result.hasShareCount = YES;
  result.shareCount = value;
  return self;
}
- (PBActivity_Builder*) clearShareCount {
  result.hasShareCount = NO;
  result.shareCount = 0;
  return self;
}
- (BOOL) hasParticipantCount {
  return result.hasParticipantCount;
}
- (int32_t) participantCount {
  return result.participantCount;
}
- (PBActivity_Builder*) setParticipantCount:(int32_t) value {
  result.hasParticipantCount = YES;
  result.participantCount = value;
  return self;
}
- (PBActivity_Builder*) clearParticipantCount {
  result.hasParticipantCount = NO;
  result.participantCount = 0;
  return self;
}
- (BOOL) hasMarkCount {
  return result.hasMarkCount;
}
- (int32_t) markCount {
  return result.markCount;
}
- (PBActivity_Builder*) setMarkCount:(int32_t) value {
  result.hasMarkCount = YES;
  result.markCount = value;
  return self;
}
- (PBActivity_Builder*) clearMarkCount {
  result.hasMarkCount = NO;
  result.markCount = 0;
  return self;
}
- (BOOL) hasMerchant {
  return result.hasMerchant;
}
- (PBMerchant*) merchant {
  return result.merchant;
}
- (PBActivity_Builder*) setMerchant:(PBMerchant*) value {
  result.hasMerchant = YES;
  result.merchant = value;
  return self;
}
- (PBActivity_Builder*) setMerchantBuilder:(PBMerchant_Builder*) builderForValue {
  return [self setMerchant:[builderForValue build]];
}
- (PBActivity_Builder*) mergeMerchant:(PBMerchant*) value {
  if (result.hasMerchant &&
      result.merchant != [PBMerchant defaultInstance]) {
    result.merchant =
      [[[PBMerchant builderWithPrototype:result.merchant] mergeFrom:value] buildPartial];
  } else {
    result.merchant = value;
  }
  result.hasMerchant = YES;
  return self;
}
- (PBActivity_Builder*) clearMerchant {
  result.hasMerchant = NO;
  result.merchant = [PBMerchant defaultInstance];
  return self;
}
- (BOOL) hasLocation {
  return result.hasLocation;
}
- (PBLocation*) location {
  return result.location;
}
- (PBActivity_Builder*) setLocation:(PBLocation*) value {
  result.hasLocation = YES;
  result.location = value;
  return self;
}
- (PBActivity_Builder*) setLocationBuilder:(PBLocation_Builder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (PBActivity_Builder*) mergeLocation:(PBLocation*) value {
  if (result.hasLocation &&
      result.location != [PBLocation defaultInstance]) {
    result.location =
      [[[PBLocation builderWithPrototype:result.location] mergeFrom:value] buildPartial];
  } else {
    result.location = value;
  }
  result.hasLocation = YES;
  return self;
}
- (PBActivity_Builder*) clearLocation {
  result.hasLocation = NO;
  result.location = [PBLocation defaultInstance];
  return self;
}
- (BOOL) hasStartLoc {
  return result.hasStartLoc;
}
- (PBLocation*) startLoc {
  return result.startLoc;
}
- (PBActivity_Builder*) setStartLoc:(PBLocation*) value {
  result.hasStartLoc = YES;
  result.startLoc = value;
  return self;
}
- (PBActivity_Builder*) setStartLocBuilder:(PBLocation_Builder*) builderForValue {
  return [self setStartLoc:[builderForValue build]];
}
- (PBActivity_Builder*) mergeStartLoc:(PBLocation*) value {
  if (result.hasStartLoc &&
      result.startLoc != [PBLocation defaultInstance]) {
    result.startLoc =
      [[[PBLocation builderWithPrototype:result.startLoc] mergeFrom:value] buildPartial];
  } else {
    result.startLoc = value;
  }
  result.hasStartLoc = YES;
  return self;
}
- (PBActivity_Builder*) clearStartLoc {
  result.hasStartLoc = NO;
  result.startLoc = [PBLocation defaultInstance];
  return self;
}
- (BOOL) hasEndLoc {
  return result.hasEndLoc;
}
- (PBLocation*) endLoc {
  return result.endLoc;
}
- (PBActivity_Builder*) setEndLoc:(PBLocation*) value {
  result.hasEndLoc = YES;
  result.endLoc = value;
  return self;
}
- (PBActivity_Builder*) setEndLocBuilder:(PBLocation_Builder*) builderForValue {
  return [self setEndLoc:[builderForValue build]];
}
- (PBActivity_Builder*) mergeEndLoc:(PBLocation*) value {
  if (result.hasEndLoc &&
      result.endLoc != [PBLocation defaultInstance]) {
    result.endLoc =
      [[[PBLocation builderWithPrototype:result.endLoc] mergeFrom:value] buildPartial];
  } else {
    result.endLoc = value;
  }
  result.hasEndLoc = YES;
  return self;
}
- (PBActivity_Builder*) clearEndLoc {
  result.hasEndLoc = NO;
  result.endLoc = [PBLocation defaultInstance];
  return self;
}
@end

@interface PBAction ()
@property (retain) NSString* actionId;
@property PBActionType type;
@property int32_t cDate;
@property (retain) PBBriefUser* user;
@property (retain) PBActivity* activity;
@property (retain) NSString* comment;
@property (retain) PBAction* relatedAction;
@end

@implementation PBAction

- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value {
  hasActionId_ = !!value;
}
@synthesize actionId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCDate {
  return !!hasCDate_;
}
- (void) setHasCDate:(BOOL) value {
  hasCDate_ = !!value;
}
@synthesize cDate;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasActivity {
  return !!hasActivity_;
}
- (void) setHasActivity:(BOOL) value {
  hasActivity_ = !!value;
}
@synthesize activity;
- (BOOL) hasComment {
  return !!hasComment_;
}
- (void) setHasComment:(BOOL) value {
  hasComment_ = !!value;
}
@synthesize comment;
- (BOOL) hasRelatedAction {
  return !!hasRelatedAction_;
}
- (void) setHasRelatedAction:(BOOL) value {
  hasRelatedAction_ = !!value;
}
@synthesize relatedAction;
- (void) dealloc {
  self.actionId = nil;
  self.user = nil;
  self.activity = nil;
  self.comment = nil;
  self.relatedAction = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.actionId = @"";
    self.type = PBActionTypeActivity;
    self.cDate = 0;
    self.user = [PBBriefUser defaultInstance];
    self.activity = [PBActivity defaultInstance];
    self.comment = @"";
    self.relatedAction = [PBAction defaultInstance];
  }
  return self;
}
static PBAction* defaultPBActionInstance = nil;
+ (void) initialize {
  if (self == [PBAction class]) {
    defaultPBActionInstance = [[PBAction alloc] init];
  }
}
+ (PBAction*) defaultInstance {
  return defaultPBActionInstance;
}
- (PBAction*) defaultInstance {
  return defaultPBActionInstance;
}
- (BOOL) isInitialized {
  if (!self.hasActionId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCDate) {
    return NO;
  }
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  if (self.hasActivity) {
    if (!self.activity.isInitialized) {
      return NO;
    }
  }
  if (self.hasRelatedAction) {
    if (!self.relatedAction.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasActionId) {
    [output writeString:1 value:self.actionId];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasCDate) {
    [output writeInt32:3 value:self.cDate];
  }
  if (self.hasUser) {
    [output writeMessage:4 value:self.user];
  }
  if (self.hasActivity) {
    [output writeMessage:20 value:self.activity];
  }
  if (self.hasComment) {
    [output writeString:21 value:self.comment];
  }
  if (self.hasRelatedAction) {
    [output writeMessage:22 value:self.relatedAction];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasActionId) {
    size += computeStringSize(1, self.actionId);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  if (self.hasCDate) {
    size += computeInt32Size(3, self.cDate);
  }
  if (self.hasUser) {
    size += computeMessageSize(4, self.user);
  }
  if (self.hasActivity) {
    size += computeMessageSize(20, self.activity);
  }
  if (self.hasComment) {
    size += computeStringSize(21, self.comment);
  }
  if (self.hasRelatedAction) {
    size += computeMessageSize(22, self.relatedAction);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBAction*) parseFromData:(NSData*) data {
  return (PBAction*)[[[PBAction builder] mergeFromData:data] build];
}
+ (PBAction*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAction*)[[[PBAction builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBAction*) parseFromInputStream:(NSInputStream*) input {
  return (PBAction*)[[[PBAction builder] mergeFromInputStream:input] build];
}
+ (PBAction*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAction*)[[[PBAction builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAction*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBAction*)[[[PBAction builder] mergeFromCodedInputStream:input] build];
}
+ (PBAction*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBAction*)[[[PBAction builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBAction_Builder*) builder {
  return [[[PBAction_Builder alloc] init] autorelease];
}
+ (PBAction_Builder*) builderWithPrototype:(PBAction*) prototype {
  return [[PBAction builder] mergeFrom:prototype];
}
- (PBAction_Builder*) builder {
  return [PBAction builder];
}
@end

@interface PBAction_Builder()
@property (retain) PBAction* result;
@end

@implementation PBAction_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBAction alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBAction_Builder*) clear {
  self.result = [[[PBAction alloc] init] autorelease];
  return self;
}
- (PBAction_Builder*) clone {
  return [PBAction builderWithPrototype:result];
}
- (PBAction*) defaultInstance {
  return [PBAction defaultInstance];
}
- (PBAction*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBAction*) buildPartial {
  PBAction* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBAction_Builder*) mergeFrom:(PBAction*) other {
  if (other == [PBAction defaultInstance]) {
    return self;
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCDate) {
    [self setCDate:other.cDate];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasActivity) {
    [self mergeActivity:other.activity];
  }
  if (other.hasComment) {
    [self setComment:other.comment];
  }
  if (other.hasRelatedAction) {
    [self mergeRelatedAction:other.relatedAction];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBAction_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setActionId:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (PBActionTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setCDate:[input readInt32]];
        break;
      }
      case 34: {
        PBBriefUser_Builder* subBuilder = [PBBriefUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        PBActivity_Builder* subBuilder = [PBActivity builder];
        if (self.hasActivity) {
          [subBuilder mergeFrom:self.activity];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setActivity:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        [self setComment:[input readString]];
        break;
      }
      case 178: {
        PBAction_Builder* subBuilder = [PBAction builder];
        if (self.hasRelatedAction) {
          [subBuilder mergeFrom:self.relatedAction];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRelatedAction:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (NSString*) actionId {
  return result.actionId;
}
- (PBAction_Builder*) setActionId:(NSString*) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PBAction_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBActionType) type {
  return result.type;
}
- (PBAction_Builder*) setType:(PBActionType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBAction_Builder*) clearType {
  result.hasType = NO;
  result.type = PBActionTypeActivity;
  return self;
}
- (BOOL) hasCDate {
  return result.hasCDate;
}
- (int32_t) cDate {
  return result.cDate;
}
- (PBAction_Builder*) setCDate:(int32_t) value {
  result.hasCDate = YES;
  result.cDate = value;
  return self;
}
- (PBAction_Builder*) clearCDate {
  result.hasCDate = NO;
  result.cDate = 0;
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (PBBriefUser*) user {
  return result.user;
}
- (PBAction_Builder*) setUser:(PBBriefUser*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PBAction_Builder*) setUserBuilder:(PBBriefUser_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PBAction_Builder*) mergeUser:(PBBriefUser*) value {
  if (result.hasUser &&
      result.user != [PBBriefUser defaultInstance]) {
    result.user =
      [[[PBBriefUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PBAction_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [PBBriefUser defaultInstance];
  return self;
}
- (BOOL) hasActivity {
  return result.hasActivity;
}
- (PBActivity*) activity {
  return result.activity;
}
- (PBAction_Builder*) setActivity:(PBActivity*) value {
  result.hasActivity = YES;
  result.activity = value;
  return self;
}
- (PBAction_Builder*) setActivityBuilder:(PBActivity_Builder*) builderForValue {
  return [self setActivity:[builderForValue build]];
}
- (PBAction_Builder*) mergeActivity:(PBActivity*) value {
  if (result.hasActivity &&
      result.activity != [PBActivity defaultInstance]) {
    result.activity =
      [[[PBActivity builderWithPrototype:result.activity] mergeFrom:value] buildPartial];
  } else {
    result.activity = value;
  }
  result.hasActivity = YES;
  return self;
}
- (PBAction_Builder*) clearActivity {
  result.hasActivity = NO;
  result.activity = [PBActivity defaultInstance];
  return self;
}
- (BOOL) hasComment {
  return result.hasComment;
}
- (NSString*) comment {
  return result.comment;
}
- (PBAction_Builder*) setComment:(NSString*) value {
  result.hasComment = YES;
  result.comment = value;
  return self;
}
- (PBAction_Builder*) clearComment {
  result.hasComment = NO;
  result.comment = @"";
  return self;
}
- (BOOL) hasRelatedAction {
  return result.hasRelatedAction;
}
- (PBAction*) relatedAction {
  return result.relatedAction;
}
- (PBAction_Builder*) setRelatedAction:(PBAction*) value {
  result.hasRelatedAction = YES;
  result.relatedAction = value;
  return self;
}
- (PBAction_Builder*) setRelatedActionBuilder:(PBAction_Builder*) builderForValue {
  return [self setRelatedAction:[builderForValue build]];
}
- (PBAction_Builder*) mergeRelatedAction:(PBAction*) value {
  if (result.hasRelatedAction &&
      result.relatedAction != [PBAction defaultInstance]) {
    result.relatedAction =
      [[[PBAction builderWithPrototype:result.relatedAction] mergeFrom:value] buildPartial];
  } else {
    result.relatedAction = value;
  }
  result.hasRelatedAction = YES;
  return self;
}
- (PBAction_Builder*) clearRelatedAction {
  result.hasRelatedAction = NO;
  result.relatedAction = [PBAction defaultInstance];
  return self;
}
@end

@interface PBComment ()
@property (retain) NSString* commentId;
@property (retain) PBBriefUser* user;
@property int32_t cDate;
@property (retain) NSString* actionId;
@property (retain) NSString* content;
@property int32_t star;
@property BOOL isReply;
@property (retain) NSString* replyActionId;
@property (retain) NSString* digest;
@end

@implementation PBComment

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) value {
  hasCommentId_ = !!value;
}
@synthesize commentId;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) value {
  hasUser_ = !!value;
}
@synthesize user;
- (BOOL) hasCDate {
  return !!hasCDate_;
}
- (void) setHasCDate:(BOOL) value {
  hasCDate_ = !!value;
}
@synthesize cDate;
- (BOOL) hasActionId {
  return !!hasActionId_;
}
- (void) setHasActionId:(BOOL) value {
  hasActionId_ = !!value;
}
@synthesize actionId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasStar {
  return !!hasStar_;
}
- (void) setHasStar:(BOOL) value {
  hasStar_ = !!value;
}
@synthesize star;
- (BOOL) hasIsReply {
  return !!hasIsReply_;
}
- (void) setHasIsReply:(BOOL) value {
  hasIsReply_ = !!value;
}
- (BOOL) isReply {
  return !!isReply_;
}
- (void) setIsReply:(BOOL) value {
  isReply_ = !!value;
}
- (BOOL) hasReplyActionId {
  return !!hasReplyActionId_;
}
- (void) setHasReplyActionId:(BOOL) value {
  hasReplyActionId_ = !!value;
}
@synthesize replyActionId;
- (BOOL) hasDigest {
  return !!hasDigest_;
}
- (void) setHasDigest:(BOOL) value {
  hasDigest_ = !!value;
}
@synthesize digest;
- (void) dealloc {
  self.commentId = nil;
  self.user = nil;
  self.actionId = nil;
  self.content = nil;
  self.replyActionId = nil;
  self.digest = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.commentId = @"";
    self.user = [PBBriefUser defaultInstance];
    self.cDate = 0;
    self.actionId = @"";
    self.content = @"";
    self.star = 0;
    self.isReply = NO;
    self.replyActionId = @"";
    self.digest = @"";
  }
  return self;
}
static PBComment* defaultPBCommentInstance = nil;
+ (void) initialize {
  if (self == [PBComment class]) {
    defaultPBCommentInstance = [[PBComment alloc] init];
  }
}
+ (PBComment*) defaultInstance {
  return defaultPBCommentInstance;
}
- (PBComment*) defaultInstance {
  return defaultPBCommentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  if (!self.hasUser) {
    return NO;
  }
  if (!self.hasCDate) {
    return NO;
  }
  if (!self.hasActionId) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeString:1 value:self.commentId];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  if (self.hasCDate) {
    [output writeInt32:3 value:self.cDate];
  }
  if (self.hasActionId) {
    [output writeString:4 value:self.actionId];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasStar) {
    [output writeInt32:6 value:self.star];
  }
  if (self.hasIsReply) {
    [output writeBool:7 value:self.isReply];
  }
  if (self.hasReplyActionId) {
    [output writeString:8 value:self.replyActionId];
  }
  if (self.hasDigest) {
    [output writeString:9 value:self.digest];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommentId) {
    size += computeStringSize(1, self.commentId);
  }
  if (self.hasUser) {
    size += computeMessageSize(2, self.user);
  }
  if (self.hasCDate) {
    size += computeInt32Size(3, self.cDate);
  }
  if (self.hasActionId) {
    size += computeStringSize(4, self.actionId);
  }
  if (self.hasContent) {
    size += computeStringSize(5, self.content);
  }
  if (self.hasStar) {
    size += computeInt32Size(6, self.star);
  }
  if (self.hasIsReply) {
    size += computeBoolSize(7, self.isReply);
  }
  if (self.hasReplyActionId) {
    size += computeStringSize(8, self.replyActionId);
  }
  if (self.hasDigest) {
    size += computeStringSize(9, self.digest);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBComment*) parseFromData:(NSData*) data {
  return (PBComment*)[[[PBComment builder] mergeFromData:data] build];
}
+ (PBComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBComment*)[[[PBComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBComment*) parseFromInputStream:(NSInputStream*) input {
  return (PBComment*)[[[PBComment builder] mergeFromInputStream:input] build];
}
+ (PBComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBComment*)[[[PBComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBComment*)[[[PBComment builder] mergeFromCodedInputStream:input] build];
}
+ (PBComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBComment*)[[[PBComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBComment_Builder*) builder {
  return [[[PBComment_Builder alloc] init] autorelease];
}
+ (PBComment_Builder*) builderWithPrototype:(PBComment*) prototype {
  return [[PBComment builder] mergeFrom:prototype];
}
- (PBComment_Builder*) builder {
  return [PBComment builder];
}
@end

@interface PBComment_Builder()
@property (retain) PBComment* result;
@end

@implementation PBComment_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBComment alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBComment_Builder*) clear {
  self.result = [[[PBComment alloc] init] autorelease];
  return self;
}
- (PBComment_Builder*) clone {
  return [PBComment builderWithPrototype:result];
}
- (PBComment*) defaultInstance {
  return [PBComment defaultInstance];
}
- (PBComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBComment*) buildPartial {
  PBComment* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBComment_Builder*) mergeFrom:(PBComment*) other {
  if (other == [PBComment defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasCDate) {
    [self setCDate:other.cDate];
  }
  if (other.hasActionId) {
    [self setActionId:other.actionId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasStar) {
    [self setStar:other.star];
  }
  if (other.hasIsReply) {
    [self setIsReply:other.isReply];
  }
  if (other.hasReplyActionId) {
    [self setReplyActionId:other.replyActionId];
  }
  if (other.hasDigest) {
    [self setDigest:other.digest];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBComment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCommentId:[input readString]];
        break;
      }
      case 18: {
        PBBriefUser_Builder* subBuilder = [PBBriefUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setCDate:[input readInt32]];
        break;
      }
      case 34: {
        [self setActionId:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        [self setStar:[input readInt32]];
        break;
      }
      case 56: {
        [self setIsReply:[input readBool]];
        break;
      }
      case 66: {
        [self setReplyActionId:[input readString]];
        break;
      }
      case 74: {
        [self setDigest:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return result.hasCommentId;
}
- (NSString*) commentId {
  return result.commentId;
}
- (PBComment_Builder*) setCommentId:(NSString*) value {
  result.hasCommentId = YES;
  result.commentId = value;
  return self;
}
- (PBComment_Builder*) clearCommentId {
  result.hasCommentId = NO;
  result.commentId = @"";
  return self;
}
- (BOOL) hasUser {
  return result.hasUser;
}
- (PBBriefUser*) user {
  return result.user;
}
- (PBComment_Builder*) setUser:(PBBriefUser*) value {
  result.hasUser = YES;
  result.user = value;
  return self;
}
- (PBComment_Builder*) setUserBuilder:(PBBriefUser_Builder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (PBComment_Builder*) mergeUser:(PBBriefUser*) value {
  if (result.hasUser &&
      result.user != [PBBriefUser defaultInstance]) {
    result.user =
      [[[PBBriefUser builderWithPrototype:result.user] mergeFrom:value] buildPartial];
  } else {
    result.user = value;
  }
  result.hasUser = YES;
  return self;
}
- (PBComment_Builder*) clearUser {
  result.hasUser = NO;
  result.user = [PBBriefUser defaultInstance];
  return self;
}
- (BOOL) hasCDate {
  return result.hasCDate;
}
- (int32_t) cDate {
  return result.cDate;
}
- (PBComment_Builder*) setCDate:(int32_t) value {
  result.hasCDate = YES;
  result.cDate = value;
  return self;
}
- (PBComment_Builder*) clearCDate {
  result.hasCDate = NO;
  result.cDate = 0;
  return self;
}
- (BOOL) hasActionId {
  return result.hasActionId;
}
- (NSString*) actionId {
  return result.actionId;
}
- (PBComment_Builder*) setActionId:(NSString*) value {
  result.hasActionId = YES;
  result.actionId = value;
  return self;
}
- (PBComment_Builder*) clearActionId {
  result.hasActionId = NO;
  result.actionId = @"";
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (PBComment_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (PBComment_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasStar {
  return result.hasStar;
}
- (int32_t) star {
  return result.star;
}
- (PBComment_Builder*) setStar:(int32_t) value {
  result.hasStar = YES;
  result.star = value;
  return self;
}
- (PBComment_Builder*) clearStar {
  result.hasStar = NO;
  result.star = 0;
  return self;
}
- (BOOL) hasIsReply {
  return result.hasIsReply;
}
- (BOOL) isReply {
  return result.isReply;
}
- (PBComment_Builder*) setIsReply:(BOOL) value {
  result.hasIsReply = YES;
  result.isReply = value;
  return self;
}
- (PBComment_Builder*) clearIsReply {
  result.hasIsReply = NO;
  result.isReply = NO;
  return self;
}
- (BOOL) hasReplyActionId {
  return result.hasReplyActionId;
}
- (NSString*) replyActionId {
  return result.replyActionId;
}
- (PBComment_Builder*) setReplyActionId:(NSString*) value {
  result.hasReplyActionId = YES;
  result.replyActionId = value;
  return self;
}
- (PBComment_Builder*) clearReplyActionId {
  result.hasReplyActionId = NO;
  result.replyActionId = @"";
  return self;
}
- (BOOL) hasDigest {
  return result.hasDigest;
}
- (NSString*) digest {
  return result.digest;
}
- (PBComment_Builder*) setDigest:(NSString*) value {
  result.hasDigest = YES;
  result.digest = value;
  return self;
}
- (PBComment_Builder*) clearDigest {
  result.hasDigest = NO;
  result.digest = @"";
  return self;
}
@end

