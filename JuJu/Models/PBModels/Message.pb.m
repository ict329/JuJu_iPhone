// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Message.pb.h"

@implementation MessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BasicRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBMessageTypeIsValidValue(PBMessageType value) {
  switch (value) {
    case PBMessageTypeText:
    case PBMessageTypeImage:
    case PBMessageTypeSound:
      return YES;
    default:
      return NO;
  }
}
BOOL PBMessageStatusIsValidValue(PBMessageStatus value) {
  switch (value) {
    case PBMessageStatusUnread:
    case PBMessageStatusRead:
    case PBMessageStatusSending:
    case PBMessageStatusSent:
      return YES;
    default:
      return NO;
  }
}
@interface PBMessage ()
@property (retain) NSString* messageId;
@property (retain) NSString* fromUid;
@property (retain) NSString* toUid;
@property PBMessageType type;
@property PBMessageStatus status;
@property int32_t cDate;
@property (retain) NSString* text;
@property (retain) NSString* imageUrl;
@property (retain) NSString* soundUrl;
@end

@implementation PBMessage

- (BOOL) hasMessageId {
  return !!hasMessageId_;
}
- (void) setHasMessageId:(BOOL) value {
  hasMessageId_ = !!value;
}
@synthesize messageId;
- (BOOL) hasFromUid {
  return !!hasFromUid_;
}
- (void) setHasFromUid:(BOOL) value {
  hasFromUid_ = !!value;
}
@synthesize fromUid;
- (BOOL) hasToUid {
  return !!hasToUid_;
}
- (void) setHasToUid:(BOOL) value {
  hasToUid_ = !!value;
}
@synthesize toUid;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasCDate {
  return !!hasCDate_;
}
- (void) setHasCDate:(BOOL) value {
  hasCDate_ = !!value;
}
@synthesize cDate;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) value {
  hasText_ = !!value;
}
@synthesize text;
- (BOOL) hasImageUrl {
  return !!hasImageUrl_;
}
- (void) setHasImageUrl:(BOOL) value {
  hasImageUrl_ = !!value;
}
@synthesize imageUrl;
- (BOOL) hasSoundUrl {
  return !!hasSoundUrl_;
}
- (void) setHasSoundUrl:(BOOL) value {
  hasSoundUrl_ = !!value;
}
@synthesize soundUrl;
- (void) dealloc {
  self.messageId = nil;
  self.fromUid = nil;
  self.toUid = nil;
  self.text = nil;
  self.imageUrl = nil;
  self.soundUrl = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.messageId = @"";
    self.fromUid = @"";
    self.toUid = @"";
    self.type = PBMessageTypeText;
    self.status = PBMessageStatusUnread;
    self.cDate = 0;
    self.text = @"";
    self.imageUrl = @"";
    self.soundUrl = @"";
  }
  return self;
}
static PBMessage* defaultPBMessageInstance = nil;
+ (void) initialize {
  if (self == [PBMessage class]) {
    defaultPBMessageInstance = [[PBMessage alloc] init];
  }
}
+ (PBMessage*) defaultInstance {
  return defaultPBMessageInstance;
}
- (PBMessage*) defaultInstance {
  return defaultPBMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMessageId) {
    return NO;
  }
  if (!self.hasFromUid) {
    return NO;
  }
  if (!self.hasToUid) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasCDate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMessageId) {
    [output writeString:1 value:self.messageId];
  }
  if (self.hasFromUid) {
    [output writeString:2 value:self.fromUid];
  }
  if (self.hasToUid) {
    [output writeString:3 value:self.toUid];
  }
  if (self.hasType) {
    [output writeEnum:4 value:self.type];
  }
  if (self.hasStatus) {
    [output writeEnum:5 value:self.status];
  }
  if (self.hasCDate) {
    [output writeInt32:6 value:self.cDate];
  }
  if (self.hasText) {
    [output writeString:10 value:self.text];
  }
  if (self.hasImageUrl) {
    [output writeString:11 value:self.imageUrl];
  }
  if (self.hasSoundUrl) {
    [output writeString:12 value:self.soundUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMessageId) {
    size += computeStringSize(1, self.messageId);
  }
  if (self.hasFromUid) {
    size += computeStringSize(2, self.fromUid);
  }
  if (self.hasToUid) {
    size += computeStringSize(3, self.toUid);
  }
  if (self.hasType) {
    size += computeEnumSize(4, self.type);
  }
  if (self.hasStatus) {
    size += computeEnumSize(5, self.status);
  }
  if (self.hasCDate) {
    size += computeInt32Size(6, self.cDate);
  }
  if (self.hasText) {
    size += computeStringSize(10, self.text);
  }
  if (self.hasImageUrl) {
    size += computeStringSize(11, self.imageUrl);
  }
  if (self.hasSoundUrl) {
    size += computeStringSize(12, self.soundUrl);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBMessage*) parseFromData:(NSData*) data {
  return (PBMessage*)[[[PBMessage builder] mergeFromData:data] build];
}
+ (PBMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMessage*)[[[PBMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBMessage*) parseFromInputStream:(NSInputStream*) input {
  return (PBMessage*)[[[PBMessage builder] mergeFromInputStream:input] build];
}
+ (PBMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMessage*)[[[PBMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBMessage*)[[[PBMessage builder] mergeFromCodedInputStream:input] build];
}
+ (PBMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBMessage*)[[[PBMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBMessage_Builder*) builder {
  return [[[PBMessage_Builder alloc] init] autorelease];
}
+ (PBMessage_Builder*) builderWithPrototype:(PBMessage*) prototype {
  return [[PBMessage builder] mergeFrom:prototype];
}
- (PBMessage_Builder*) builder {
  return [PBMessage builder];
}
@end

@interface PBMessage_Builder()
@property (retain) PBMessage* result;
@end

@implementation PBMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBMessage_Builder*) clear {
  self.result = [[[PBMessage alloc] init] autorelease];
  return self;
}
- (PBMessage_Builder*) clone {
  return [PBMessage builderWithPrototype:result];
}
- (PBMessage*) defaultInstance {
  return [PBMessage defaultInstance];
}
- (PBMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBMessage*) buildPartial {
  PBMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBMessage_Builder*) mergeFrom:(PBMessage*) other {
  if (other == [PBMessage defaultInstance]) {
    return self;
  }
  if (other.hasMessageId) {
    [self setMessageId:other.messageId];
  }
  if (other.hasFromUid) {
    [self setFromUid:other.fromUid];
  }
  if (other.hasToUid) {
    [self setToUid:other.toUid];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCDate) {
    [self setCDate:other.cDate];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  if (other.hasImageUrl) {
    [self setImageUrl:other.imageUrl];
  }
  if (other.hasSoundUrl) {
    [self setSoundUrl:other.soundUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMessageId:[input readString]];
        break;
      }
      case 18: {
        [self setFromUid:[input readString]];
        break;
      }
      case 26: {
        [self setToUid:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (PBMessageTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        int32_t value = [input readEnum];
        if (PBMessageStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setCDate:[input readInt32]];
        break;
      }
      case 82: {
        [self setText:[input readString]];
        break;
      }
      case 90: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 98: {
        [self setSoundUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMessageId {
  return result.hasMessageId;
}
- (NSString*) messageId {
  return result.messageId;
}
- (PBMessage_Builder*) setMessageId:(NSString*) value {
  result.hasMessageId = YES;
  result.messageId = value;
  return self;
}
- (PBMessage_Builder*) clearMessageId {
  result.hasMessageId = NO;
  result.messageId = @"";
  return self;
}
- (BOOL) hasFromUid {
  return result.hasFromUid;
}
- (NSString*) fromUid {
  return result.fromUid;
}
- (PBMessage_Builder*) setFromUid:(NSString*) value {
  result.hasFromUid = YES;
  result.fromUid = value;
  return self;
}
- (PBMessage_Builder*) clearFromUid {
  result.hasFromUid = NO;
  result.fromUid = @"";
  return self;
}
- (BOOL) hasToUid {
  return result.hasToUid;
}
- (NSString*) toUid {
  return result.toUid;
}
- (PBMessage_Builder*) setToUid:(NSString*) value {
  result.hasToUid = YES;
  result.toUid = value;
  return self;
}
- (PBMessage_Builder*) clearToUid {
  result.hasToUid = NO;
  result.toUid = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (PBMessageType) type {
  return result.type;
}
- (PBMessage_Builder*) setType:(PBMessageType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PBMessage_Builder*) clearType {
  result.hasType = NO;
  result.type = PBMessageTypeText;
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBMessageStatus) status {
  return result.status;
}
- (PBMessage_Builder*) setStatus:(PBMessageStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBMessage_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBMessageStatusUnread;
  return self;
}
- (BOOL) hasCDate {
  return result.hasCDate;
}
- (int32_t) cDate {
  return result.cDate;
}
- (PBMessage_Builder*) setCDate:(int32_t) value {
  result.hasCDate = YES;
  result.cDate = value;
  return self;
}
- (PBMessage_Builder*) clearCDate {
  result.hasCDate = NO;
  result.cDate = 0;
  return self;
}
- (BOOL) hasText {
  return result.hasText;
}
- (NSString*) text {
  return result.text;
}
- (PBMessage_Builder*) setText:(NSString*) value {
  result.hasText = YES;
  result.text = value;
  return self;
}
- (PBMessage_Builder*) clearText {
  result.hasText = NO;
  result.text = @"";
  return self;
}
- (BOOL) hasImageUrl {
  return result.hasImageUrl;
}
- (NSString*) imageUrl {
  return result.imageUrl;
}
- (PBMessage_Builder*) setImageUrl:(NSString*) value {
  result.hasImageUrl = YES;
  result.imageUrl = value;
  return self;
}
- (PBMessage_Builder*) clearImageUrl {
  result.hasImageUrl = NO;
  result.imageUrl = @"";
  return self;
}
- (BOOL) hasSoundUrl {
  return result.hasSoundUrl;
}
- (NSString*) soundUrl {
  return result.soundUrl;
}
- (PBMessage_Builder*) setSoundUrl:(NSString*) value {
  result.hasSoundUrl = YES;
  result.soundUrl = value;
  return self;
}
- (PBMessage_Builder*) clearSoundUrl {
  result.hasSoundUrl = NO;
  result.soundUrl = @"";
  return self;
}
@end

