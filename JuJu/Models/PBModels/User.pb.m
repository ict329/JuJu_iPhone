// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "User.pb.h"

@implementation UserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BasicRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBRelationIsValidValue(PBRelation value) {
  switch (value) {
    case PBRelationStrange:
    case PBRelationFollow:
    case PBRelationFan:
    case PBRelationFriend:
    case PBRelationBlack:
      return YES;
    default:
      return NO;
  }
}
BOOL PBRegTypeIsValidValue(PBRegType value) {
  switch (value) {
    case PBRegTypeNick:
    case PBRegTypeSinaWeibo:
    case PBRegTypeQqWeibo:
    case PBRegTypeRenren:
    case PBRegTypeQqSpace:
    case PBRegTypeKaixin:
    case PBRegTypeFacebook:
    case PBRegTypeTwitter:
      return YES;
    default:
      return NO;
  }
}
BOOL PBUserRoleIsValidValue(PBUserRole value) {
  switch (value) {
    case PBUserRoleUser:
    case PBUserRoleAdmin:
    case PBUserRoleVip:
    case PBUserRoleForbidden:
      return YES;
    default:
      return NO;
  }
}
BOOL PBUserStatusIsValidValue(PBUserStatus value) {
  switch (value) {
    case PBUserStatusOffline:
    case PBUserStatusOnline:
    case PBUserStatusHidden:
      return YES;
    default:
      return NO;
  }
}
@interface PBSNS ()
@property (retain) NSString* telNumber;
@property (retain) NSString* qqNumber;
@property (retain) NSString* qqWeiboId;
@property (retain) NSString* qqWeiboNick;
@property (retain) NSString* sinaWeiboId;
@property (retain) NSString* sinaWeiboNick;
@property (retain) NSString* renrenId;
@property (retain) NSString* renrenNick;
@end

@implementation PBSNS

- (BOOL) hasTelNumber {
  return !!hasTelNumber_;
}
- (void) setHasTelNumber:(BOOL) value {
  hasTelNumber_ = !!value;
}
@synthesize telNumber;
- (BOOL) hasQqNumber {
  return !!hasQqNumber_;
}
- (void) setHasQqNumber:(BOOL) value {
  hasQqNumber_ = !!value;
}
@synthesize qqNumber;
- (BOOL) hasQqWeiboId {
  return !!hasQqWeiboId_;
}
- (void) setHasQqWeiboId:(BOOL) value {
  hasQqWeiboId_ = !!value;
}
@synthesize qqWeiboId;
- (BOOL) hasQqWeiboNick {
  return !!hasQqWeiboNick_;
}
- (void) setHasQqWeiboNick:(BOOL) value {
  hasQqWeiboNick_ = !!value;
}
@synthesize qqWeiboNick;
- (BOOL) hasSinaWeiboId {
  return !!hasSinaWeiboId_;
}
- (void) setHasSinaWeiboId:(BOOL) value {
  hasSinaWeiboId_ = !!value;
}
@synthesize sinaWeiboId;
- (BOOL) hasSinaWeiboNick {
  return !!hasSinaWeiboNick_;
}
- (void) setHasSinaWeiboNick:(BOOL) value {
  hasSinaWeiboNick_ = !!value;
}
@synthesize sinaWeiboNick;
- (BOOL) hasRenrenId {
  return !!hasRenrenId_;
}
- (void) setHasRenrenId:(BOOL) value {
  hasRenrenId_ = !!value;
}
@synthesize renrenId;
- (BOOL) hasRenrenNick {
  return !!hasRenrenNick_;
}
- (void) setHasRenrenNick:(BOOL) value {
  hasRenrenNick_ = !!value;
}
@synthesize renrenNick;
- (void) dealloc {
  self.telNumber = nil;
  self.qqNumber = nil;
  self.qqWeiboId = nil;
  self.qqWeiboNick = nil;
  self.sinaWeiboId = nil;
  self.sinaWeiboNick = nil;
  self.renrenId = nil;
  self.renrenNick = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.telNumber = @"";
    self.qqNumber = @"";
    self.qqWeiboId = @"";
    self.qqWeiboNick = @"";
    self.sinaWeiboId = @"";
    self.sinaWeiboNick = @"";
    self.renrenId = @"";
    self.renrenNick = @"";
  }
  return self;
}
static PBSNS* defaultPBSNSInstance = nil;
+ (void) initialize {
  if (self == [PBSNS class]) {
    defaultPBSNSInstance = [[PBSNS alloc] init];
  }
}
+ (PBSNS*) defaultInstance {
  return defaultPBSNSInstance;
}
- (PBSNS*) defaultInstance {
  return defaultPBSNSInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTelNumber) {
    [output writeString:1 value:self.telNumber];
  }
  if (self.hasQqNumber) {
    [output writeString:2 value:self.qqNumber];
  }
  if (self.hasQqWeiboId) {
    [output writeString:3 value:self.qqWeiboId];
  }
  if (self.hasQqWeiboNick) {
    [output writeString:4 value:self.qqWeiboNick];
  }
  if (self.hasSinaWeiboId) {
    [output writeString:5 value:self.sinaWeiboId];
  }
  if (self.hasSinaWeiboNick) {
    [output writeString:6 value:self.sinaWeiboNick];
  }
  if (self.hasRenrenId) {
    [output writeString:7 value:self.renrenId];
  }
  if (self.hasRenrenNick) {
    [output writeString:8 value:self.renrenNick];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTelNumber) {
    size += computeStringSize(1, self.telNumber);
  }
  if (self.hasQqNumber) {
    size += computeStringSize(2, self.qqNumber);
  }
  if (self.hasQqWeiboId) {
    size += computeStringSize(3, self.qqWeiboId);
  }
  if (self.hasQqWeiboNick) {
    size += computeStringSize(4, self.qqWeiboNick);
  }
  if (self.hasSinaWeiboId) {
    size += computeStringSize(5, self.sinaWeiboId);
  }
  if (self.hasSinaWeiboNick) {
    size += computeStringSize(6, self.sinaWeiboNick);
  }
  if (self.hasRenrenId) {
    size += computeStringSize(7, self.renrenId);
  }
  if (self.hasRenrenNick) {
    size += computeStringSize(8, self.renrenNick);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBSNS*) parseFromData:(NSData*) data {
  return (PBSNS*)[[[PBSNS builder] mergeFromData:data] build];
}
+ (PBSNS*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSNS*)[[[PBSNS builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBSNS*) parseFromInputStream:(NSInputStream*) input {
  return (PBSNS*)[[[PBSNS builder] mergeFromInputStream:input] build];
}
+ (PBSNS*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSNS*)[[[PBSNS builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSNS*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBSNS*)[[[PBSNS builder] mergeFromCodedInputStream:input] build];
}
+ (PBSNS*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBSNS*)[[[PBSNS builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBSNS_Builder*) builder {
  return [[[PBSNS_Builder alloc] init] autorelease];
}
+ (PBSNS_Builder*) builderWithPrototype:(PBSNS*) prototype {
  return [[PBSNS builder] mergeFrom:prototype];
}
- (PBSNS_Builder*) builder {
  return [PBSNS builder];
}
@end

@interface PBSNS_Builder()
@property (retain) PBSNS* result;
@end

@implementation PBSNS_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBSNS alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBSNS_Builder*) clear {
  self.result = [[[PBSNS alloc] init] autorelease];
  return self;
}
- (PBSNS_Builder*) clone {
  return [PBSNS builderWithPrototype:result];
}
- (PBSNS*) defaultInstance {
  return [PBSNS defaultInstance];
}
- (PBSNS*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBSNS*) buildPartial {
  PBSNS* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBSNS_Builder*) mergeFrom:(PBSNS*) other {
  if (other == [PBSNS defaultInstance]) {
    return self;
  }
  if (other.hasTelNumber) {
    [self setTelNumber:other.telNumber];
  }
  if (other.hasQqNumber) {
    [self setQqNumber:other.qqNumber];
  }
  if (other.hasQqWeiboId) {
    [self setQqWeiboId:other.qqWeiboId];
  }
  if (other.hasQqWeiboNick) {
    [self setQqWeiboNick:other.qqWeiboNick];
  }
  if (other.hasSinaWeiboId) {
    [self setSinaWeiboId:other.sinaWeiboId];
  }
  if (other.hasSinaWeiboNick) {
    [self setSinaWeiboNick:other.sinaWeiboNick];
  }
  if (other.hasRenrenId) {
    [self setRenrenId:other.renrenId];
  }
  if (other.hasRenrenNick) {
    [self setRenrenNick:other.renrenNick];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBSNS_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBSNS_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTelNumber:[input readString]];
        break;
      }
      case 18: {
        [self setQqNumber:[input readString]];
        break;
      }
      case 26: {
        [self setQqWeiboId:[input readString]];
        break;
      }
      case 34: {
        [self setQqWeiboNick:[input readString]];
        break;
      }
      case 42: {
        [self setSinaWeiboId:[input readString]];
        break;
      }
      case 50: {
        [self setSinaWeiboNick:[input readString]];
        break;
      }
      case 58: {
        [self setRenrenId:[input readString]];
        break;
      }
      case 66: {
        [self setRenrenNick:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTelNumber {
  return result.hasTelNumber;
}
- (NSString*) telNumber {
  return result.telNumber;
}
- (PBSNS_Builder*) setTelNumber:(NSString*) value {
  result.hasTelNumber = YES;
  result.telNumber = value;
  return self;
}
- (PBSNS_Builder*) clearTelNumber {
  result.hasTelNumber = NO;
  result.telNumber = @"";
  return self;
}
- (BOOL) hasQqNumber {
  return result.hasQqNumber;
}
- (NSString*) qqNumber {
  return result.qqNumber;
}
- (PBSNS_Builder*) setQqNumber:(NSString*) value {
  result.hasQqNumber = YES;
  result.qqNumber = value;
  return self;
}
- (PBSNS_Builder*) clearQqNumber {
  result.hasQqNumber = NO;
  result.qqNumber = @"";
  return self;
}
- (BOOL) hasQqWeiboId {
  return result.hasQqWeiboId;
}
- (NSString*) qqWeiboId {
  return result.qqWeiboId;
}
- (PBSNS_Builder*) setQqWeiboId:(NSString*) value {
  result.hasQqWeiboId = YES;
  result.qqWeiboId = value;
  return self;
}
- (PBSNS_Builder*) clearQqWeiboId {
  result.hasQqWeiboId = NO;
  result.qqWeiboId = @"";
  return self;
}
- (BOOL) hasQqWeiboNick {
  return result.hasQqWeiboNick;
}
- (NSString*) qqWeiboNick {
  return result.qqWeiboNick;
}
- (PBSNS_Builder*) setQqWeiboNick:(NSString*) value {
  result.hasQqWeiboNick = YES;
  result.qqWeiboNick = value;
  return self;
}
- (PBSNS_Builder*) clearQqWeiboNick {
  result.hasQqWeiboNick = NO;
  result.qqWeiboNick = @"";
  return self;
}
- (BOOL) hasSinaWeiboId {
  return result.hasSinaWeiboId;
}
- (NSString*) sinaWeiboId {
  return result.sinaWeiboId;
}
- (PBSNS_Builder*) setSinaWeiboId:(NSString*) value {
  result.hasSinaWeiboId = YES;
  result.sinaWeiboId = value;
  return self;
}
- (PBSNS_Builder*) clearSinaWeiboId {
  result.hasSinaWeiboId = NO;
  result.sinaWeiboId = @"";
  return self;
}
- (BOOL) hasSinaWeiboNick {
  return result.hasSinaWeiboNick;
}
- (NSString*) sinaWeiboNick {
  return result.sinaWeiboNick;
}
- (PBSNS_Builder*) setSinaWeiboNick:(NSString*) value {
  result.hasSinaWeiboNick = YES;
  result.sinaWeiboNick = value;
  return self;
}
- (PBSNS_Builder*) clearSinaWeiboNick {
  result.hasSinaWeiboNick = NO;
  result.sinaWeiboNick = @"";
  return self;
}
- (BOOL) hasRenrenId {
  return result.hasRenrenId;
}
- (NSString*) renrenId {
  return result.renrenId;
}
- (PBSNS_Builder*) setRenrenId:(NSString*) value {
  result.hasRenrenId = YES;
  result.renrenId = value;
  return self;
}
- (PBSNS_Builder*) clearRenrenId {
  result.hasRenrenId = NO;
  result.renrenId = @"";
  return self;
}
- (BOOL) hasRenrenNick {
  return result.hasRenrenNick;
}
- (NSString*) renrenNick {
  return result.renrenNick;
}
- (PBSNS_Builder*) setRenrenNick:(NSString*) value {
  result.hasRenrenNick = YES;
  result.renrenNick = value;
  return self;
}
- (PBSNS_Builder*) clearRenrenNick {
  result.hasRenrenNick = NO;
  result.renrenNick = @"";
  return self;
}
@end

@interface PBLog ()
@property int32_t lastLogDate;
@property (retain) NSString* lastLogIp;
@property Float32 lastLogLatitude;
@property Float32 lastLogLongitude;
@end

@implementation PBLog

- (BOOL) hasLastLogDate {
  return !!hasLastLogDate_;
}
- (void) setHasLastLogDate:(BOOL) value {
  hasLastLogDate_ = !!value;
}
@synthesize lastLogDate;
- (BOOL) hasLastLogIp {
  return !!hasLastLogIp_;
}
- (void) setHasLastLogIp:(BOOL) value {
  hasLastLogIp_ = !!value;
}
@synthesize lastLogIp;
- (BOOL) hasLastLogLatitude {
  return !!hasLastLogLatitude_;
}
- (void) setHasLastLogLatitude:(BOOL) value {
  hasLastLogLatitude_ = !!value;
}
@synthesize lastLogLatitude;
- (BOOL) hasLastLogLongitude {
  return !!hasLastLogLongitude_;
}
- (void) setHasLastLogLongitude:(BOOL) value {
  hasLastLogLongitude_ = !!value;
}
@synthesize lastLogLongitude;
- (void) dealloc {
  self.lastLogIp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.lastLogDate = 0;
    self.lastLogIp = @"";
    self.lastLogLatitude = 0;
    self.lastLogLongitude = 0;
  }
  return self;
}
static PBLog* defaultPBLogInstance = nil;
+ (void) initialize {
  if (self == [PBLog class]) {
    defaultPBLogInstance = [[PBLog alloc] init];
  }
}
+ (PBLog*) defaultInstance {
  return defaultPBLogInstance;
}
- (PBLog*) defaultInstance {
  return defaultPBLogInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLastLogDate) {
    [output writeInt32:1 value:self.lastLogDate];
  }
  if (self.hasLastLogIp) {
    [output writeString:2 value:self.lastLogIp];
  }
  if (self.hasLastLogLatitude) {
    [output writeFloat:3 value:self.lastLogLatitude];
  }
  if (self.hasLastLogLongitude) {
    [output writeFloat:4 value:self.lastLogLongitude];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasLastLogDate) {
    size += computeInt32Size(1, self.lastLogDate);
  }
  if (self.hasLastLogIp) {
    size += computeStringSize(2, self.lastLogIp);
  }
  if (self.hasLastLogLatitude) {
    size += computeFloatSize(3, self.lastLogLatitude);
  }
  if (self.hasLastLogLongitude) {
    size += computeFloatSize(4, self.lastLogLongitude);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBLog*) parseFromData:(NSData*) data {
  return (PBLog*)[[[PBLog builder] mergeFromData:data] build];
}
+ (PBLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBLog*)[[[PBLog builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBLog*) parseFromInputStream:(NSInputStream*) input {
  return (PBLog*)[[[PBLog builder] mergeFromInputStream:input] build];
}
+ (PBLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBLog*)[[[PBLog builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBLog*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBLog*)[[[PBLog builder] mergeFromCodedInputStream:input] build];
}
+ (PBLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBLog*)[[[PBLog builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBLog_Builder*) builder {
  return [[[PBLog_Builder alloc] init] autorelease];
}
+ (PBLog_Builder*) builderWithPrototype:(PBLog*) prototype {
  return [[PBLog builder] mergeFrom:prototype];
}
- (PBLog_Builder*) builder {
  return [PBLog builder];
}
@end

@interface PBLog_Builder()
@property (retain) PBLog* result;
@end

@implementation PBLog_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBLog alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBLog_Builder*) clear {
  self.result = [[[PBLog alloc] init] autorelease];
  return self;
}
- (PBLog_Builder*) clone {
  return [PBLog builderWithPrototype:result];
}
- (PBLog*) defaultInstance {
  return [PBLog defaultInstance];
}
- (PBLog*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBLog*) buildPartial {
  PBLog* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBLog_Builder*) mergeFrom:(PBLog*) other {
  if (other == [PBLog defaultInstance]) {
    return self;
  }
  if (other.hasLastLogDate) {
    [self setLastLogDate:other.lastLogDate];
  }
  if (other.hasLastLogIp) {
    [self setLastLogIp:other.lastLogIp];
  }
  if (other.hasLastLogLatitude) {
    [self setLastLogLatitude:other.lastLogLatitude];
  }
  if (other.hasLastLogLongitude) {
    [self setLastLogLongitude:other.lastLogLongitude];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLastLogDate:[input readInt32]];
        break;
      }
      case 18: {
        [self setLastLogIp:[input readString]];
        break;
      }
      case 29: {
        [self setLastLogLatitude:[input readFloat]];
        break;
      }
      case 37: {
        [self setLastLogLongitude:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasLastLogDate {
  return result.hasLastLogDate;
}
- (int32_t) lastLogDate {
  return result.lastLogDate;
}
- (PBLog_Builder*) setLastLogDate:(int32_t) value {
  result.hasLastLogDate = YES;
  result.lastLogDate = value;
  return self;
}
- (PBLog_Builder*) clearLastLogDate {
  result.hasLastLogDate = NO;
  result.lastLogDate = 0;
  return self;
}
- (BOOL) hasLastLogIp {
  return result.hasLastLogIp;
}
- (NSString*) lastLogIp {
  return result.lastLogIp;
}
- (PBLog_Builder*) setLastLogIp:(NSString*) value {
  result.hasLastLogIp = YES;
  result.lastLogIp = value;
  return self;
}
- (PBLog_Builder*) clearLastLogIp {
  result.hasLastLogIp = NO;
  result.lastLogIp = @"";
  return self;
}
- (BOOL) hasLastLogLatitude {
  return result.hasLastLogLatitude;
}
- (Float32) lastLogLatitude {
  return result.lastLogLatitude;
}
- (PBLog_Builder*) setLastLogLatitude:(Float32) value {
  result.hasLastLogLatitude = YES;
  result.lastLogLatitude = value;
  return self;
}
- (PBLog_Builder*) clearLastLogLatitude {
  result.hasLastLogLatitude = NO;
  result.lastLogLatitude = 0;
  return self;
}
- (BOOL) hasLastLogLongitude {
  return result.hasLastLogLongitude;
}
- (Float32) lastLogLongitude {
  return result.lastLogLongitude;
}
- (PBLog_Builder*) setLastLogLongitude:(Float32) value {
  result.hasLastLogLongitude = YES;
  result.lastLogLongitude = value;
  return self;
}
- (PBLog_Builder*) clearLastLogLongitude {
  result.hasLastLogLongitude = NO;
  result.lastLogLongitude = 0;
  return self;
}
@end

@interface PBRegistration ()
@property int32_t regDate;
@property PBRegType regType;
@property (retain) NSString* regIp;
@end

@implementation PBRegistration

- (BOOL) hasRegDate {
  return !!hasRegDate_;
}
- (void) setHasRegDate:(BOOL) value {
  hasRegDate_ = !!value;
}
@synthesize regDate;
- (BOOL) hasRegType {
  return !!hasRegType_;
}
- (void) setHasRegType:(BOOL) value {
  hasRegType_ = !!value;
}
@synthesize regType;
- (BOOL) hasRegIp {
  return !!hasRegIp_;
}
- (void) setHasRegIp:(BOOL) value {
  hasRegIp_ = !!value;
}
@synthesize regIp;
- (void) dealloc {
  self.regIp = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.regDate = 0;
    self.regType = PBRegTypeNick;
    self.regIp = @"";
  }
  return self;
}
static PBRegistration* defaultPBRegistrationInstance = nil;
+ (void) initialize {
  if (self == [PBRegistration class]) {
    defaultPBRegistrationInstance = [[PBRegistration alloc] init];
  }
}
+ (PBRegistration*) defaultInstance {
  return defaultPBRegistrationInstance;
}
- (PBRegistration*) defaultInstance {
  return defaultPBRegistrationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRegDate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRegDate) {
    [output writeInt32:1 value:self.regDate];
  }
  if (self.hasRegType) {
    [output writeEnum:2 value:self.regType];
  }
  if (self.hasRegIp) {
    [output writeString:3 value:self.regIp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasRegDate) {
    size += computeInt32Size(1, self.regDate);
  }
  if (self.hasRegType) {
    size += computeEnumSize(2, self.regType);
  }
  if (self.hasRegIp) {
    size += computeStringSize(3, self.regIp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBRegistration*) parseFromData:(NSData*) data {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromData:data] build];
}
+ (PBRegistration*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBRegistration*) parseFromInputStream:(NSInputStream*) input {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromInputStream:input] build];
}
+ (PBRegistration*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBRegistration*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromCodedInputStream:input] build];
}
+ (PBRegistration*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBRegistration*)[[[PBRegistration builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBRegistration_Builder*) builder {
  return [[[PBRegistration_Builder alloc] init] autorelease];
}
+ (PBRegistration_Builder*) builderWithPrototype:(PBRegistration*) prototype {
  return [[PBRegistration builder] mergeFrom:prototype];
}
- (PBRegistration_Builder*) builder {
  return [PBRegistration builder];
}
@end

@interface PBRegistration_Builder()
@property (retain) PBRegistration* result;
@end

@implementation PBRegistration_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBRegistration alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBRegistration_Builder*) clear {
  self.result = [[[PBRegistration alloc] init] autorelease];
  return self;
}
- (PBRegistration_Builder*) clone {
  return [PBRegistration builderWithPrototype:result];
}
- (PBRegistration*) defaultInstance {
  return [PBRegistration defaultInstance];
}
- (PBRegistration*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBRegistration*) buildPartial {
  PBRegistration* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBRegistration_Builder*) mergeFrom:(PBRegistration*) other {
  if (other == [PBRegistration defaultInstance]) {
    return self;
  }
  if (other.hasRegDate) {
    [self setRegDate:other.regDate];
  }
  if (other.hasRegType) {
    [self setRegType:other.regType];
  }
  if (other.hasRegIp) {
    [self setRegIp:other.regIp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBRegistration_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBRegistration_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRegDate:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (PBRegTypeIsValidValue(value)) {
          [self setRegType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setRegIp:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRegDate {
  return result.hasRegDate;
}
- (int32_t) regDate {
  return result.regDate;
}
- (PBRegistration_Builder*) setRegDate:(int32_t) value {
  result.hasRegDate = YES;
  result.regDate = value;
  return self;
}
- (PBRegistration_Builder*) clearRegDate {
  result.hasRegDate = NO;
  result.regDate = 0;
  return self;
}
- (BOOL) hasRegType {
  return result.hasRegType;
}
- (PBRegType) regType {
  return result.regType;
}
- (PBRegistration_Builder*) setRegType:(PBRegType) value {
  result.hasRegType = YES;
  result.regType = value;
  return self;
}
- (PBRegistration_Builder*) clearRegType {
  result.hasRegType = NO;
  result.regType = PBRegTypeNick;
  return self;
}
- (BOOL) hasRegIp {
  return result.hasRegIp;
}
- (NSString*) regIp {
  return result.regIp;
}
- (PBRegistration_Builder*) setRegIp:(NSString*) value {
  result.hasRegIp = YES;
  result.regIp = value;
  return self;
}
- (PBRegistration_Builder*) clearRegIp {
  result.hasRegIp = NO;
  result.regIp = @"";
  return self;
}
@end

@interface PBDevice ()
@property (retain) NSString* deviceId;
@property (retain) NSString* deviceOs;
@property (retain) NSString* deviceToken;
@property (retain) NSString* deviceName;
@end

@implementation PBDevice

- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) value {
  hasDeviceId_ = !!value;
}
@synthesize deviceId;
- (BOOL) hasDeviceOs {
  return !!hasDeviceOs_;
}
- (void) setHasDeviceOs:(BOOL) value {
  hasDeviceOs_ = !!value;
}
@synthesize deviceOs;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) value {
  hasDeviceToken_ = !!value;
}
@synthesize deviceToken;
- (BOOL) hasDeviceName {
  return !!hasDeviceName_;
}
- (void) setHasDeviceName:(BOOL) value {
  hasDeviceName_ = !!value;
}
@synthesize deviceName;
- (void) dealloc {
  self.deviceId = nil;
  self.deviceOs = nil;
  self.deviceToken = nil;
  self.deviceName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.deviceId = @"";
    self.deviceOs = @"";
    self.deviceToken = @"";
    self.deviceName = @"";
  }
  return self;
}
static PBDevice* defaultPBDeviceInstance = nil;
+ (void) initialize {
  if (self == [PBDevice class]) {
    defaultPBDeviceInstance = [[PBDevice alloc] init];
  }
}
+ (PBDevice*) defaultInstance {
  return defaultPBDeviceInstance;
}
- (PBDevice*) defaultInstance {
  return defaultPBDeviceInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceId) {
    [output writeString:1 value:self.deviceId];
  }
  if (self.hasDeviceOs) {
    [output writeString:2 value:self.deviceOs];
  }
  if (self.hasDeviceToken) {
    [output writeString:3 value:self.deviceToken];
  }
  if (self.hasDeviceName) {
    [output writeString:4 value:self.deviceName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasDeviceId) {
    size += computeStringSize(1, self.deviceId);
  }
  if (self.hasDeviceOs) {
    size += computeStringSize(2, self.deviceOs);
  }
  if (self.hasDeviceToken) {
    size += computeStringSize(3, self.deviceToken);
  }
  if (self.hasDeviceName) {
    size += computeStringSize(4, self.deviceName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBDevice*) parseFromData:(NSData*) data {
  return (PBDevice*)[[[PBDevice builder] mergeFromData:data] build];
}
+ (PBDevice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBDevice*) parseFromInputStream:(NSInputStream*) input {
  return (PBDevice*)[[[PBDevice builder] mergeFromInputStream:input] build];
}
+ (PBDevice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBDevice*)[[[PBDevice builder] mergeFromCodedInputStream:input] build];
}
+ (PBDevice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBDevice*)[[[PBDevice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBDevice_Builder*) builder {
  return [[[PBDevice_Builder alloc] init] autorelease];
}
+ (PBDevice_Builder*) builderWithPrototype:(PBDevice*) prototype {
  return [[PBDevice builder] mergeFrom:prototype];
}
- (PBDevice_Builder*) builder {
  return [PBDevice builder];
}
@end

@interface PBDevice_Builder()
@property (retain) PBDevice* result;
@end

@implementation PBDevice_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBDevice alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBDevice_Builder*) clear {
  self.result = [[[PBDevice alloc] init] autorelease];
  return self;
}
- (PBDevice_Builder*) clone {
  return [PBDevice builderWithPrototype:result];
}
- (PBDevice*) defaultInstance {
  return [PBDevice defaultInstance];
}
- (PBDevice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBDevice*) buildPartial {
  PBDevice* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBDevice_Builder*) mergeFrom:(PBDevice*) other {
  if (other == [PBDevice defaultInstance]) {
    return self;
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  if (other.hasDeviceOs) {
    [self setDeviceOs:other.deviceOs];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasDeviceName) {
    [self setDeviceName:other.deviceName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBDevice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBDevice_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceId:[input readString]];
        break;
      }
      case 18: {
        [self setDeviceOs:[input readString]];
        break;
      }
      case 26: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 34: {
        [self setDeviceName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceId {
  return result.hasDeviceId;
}
- (NSString*) deviceId {
  return result.deviceId;
}
- (PBDevice_Builder*) setDeviceId:(NSString*) value {
  result.hasDeviceId = YES;
  result.deviceId = value;
  return self;
}
- (PBDevice_Builder*) clearDeviceId {
  result.hasDeviceId = NO;
  result.deviceId = @"";
  return self;
}
- (BOOL) hasDeviceOs {
  return result.hasDeviceOs;
}
- (NSString*) deviceOs {
  return result.deviceOs;
}
- (PBDevice_Builder*) setDeviceOs:(NSString*) value {
  result.hasDeviceOs = YES;
  result.deviceOs = value;
  return self;
}
- (PBDevice_Builder*) clearDeviceOs {
  result.hasDeviceOs = NO;
  result.deviceOs = @"";
  return self;
}
- (BOOL) hasDeviceToken {
  return result.hasDeviceToken;
}
- (NSString*) deviceToken {
  return result.deviceToken;
}
- (PBDevice_Builder*) setDeviceToken:(NSString*) value {
  result.hasDeviceToken = YES;
  result.deviceToken = value;
  return self;
}
- (PBDevice_Builder*) clearDeviceToken {
  result.hasDeviceToken = NO;
  result.deviceToken = @"";
  return self;
}
- (BOOL) hasDeviceName {
  return result.hasDeviceName;
}
- (NSString*) deviceName {
  return result.deviceName;
}
- (PBDevice_Builder*) setDeviceName:(NSString*) value {
  result.hasDeviceName = YES;
  result.deviceName = value;
  return self;
}
- (PBDevice_Builder*) clearDeviceName {
  result.hasDeviceName = NO;
  result.deviceName = @"";
  return self;
}
@end

@interface PBStatistic ()
@property int32_t fanCount;
@property int32_t followCount;
@property int32_t myActivity;
@property int32_t newFanCount;
@property int32_t newFollowCount;
@property int32_t newMessageCount;
@property int32_t newFeedCount;
@property int32_t newNoticeCount;
@end

@implementation PBStatistic

- (BOOL) hasFanCount {
  return !!hasFanCount_;
}
- (void) setHasFanCount:(BOOL) value {
  hasFanCount_ = !!value;
}
@synthesize fanCount;
- (BOOL) hasFollowCount {
  return !!hasFollowCount_;
}
- (void) setHasFollowCount:(BOOL) value {
  hasFollowCount_ = !!value;
}
@synthesize followCount;
- (BOOL) hasMyActivity {
  return !!hasMyActivity_;
}
- (void) setHasMyActivity:(BOOL) value {
  hasMyActivity_ = !!value;
}
@synthesize myActivity;
- (BOOL) hasNewFanCount {
  return !!hasNewFanCount_;
}
- (void) setHasNewFanCount:(BOOL) value {
  hasNewFanCount_ = !!value;
}
@synthesize newFanCount;
- (BOOL) hasNewFollowCount {
  return !!hasNewFollowCount_;
}
- (void) setHasNewFollowCount:(BOOL) value {
  hasNewFollowCount_ = !!value;
}
@synthesize newFollowCount;
- (BOOL) hasNewMessageCount {
  return !!hasNewMessageCount_;
}
- (void) setHasNewMessageCount:(BOOL) value {
  hasNewMessageCount_ = !!value;
}
@synthesize newMessageCount;
- (BOOL) hasNewFeedCount {
  return !!hasNewFeedCount_;
}
- (void) setHasNewFeedCount:(BOOL) value {
  hasNewFeedCount_ = !!value;
}
@synthesize newFeedCount;
- (BOOL) hasNewNoticeCount {
  return !!hasNewNoticeCount_;
}
- (void) setHasNewNoticeCount:(BOOL) value {
  hasNewNoticeCount_ = !!value;
}
@synthesize newNoticeCount;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.fanCount = 0;
    self.followCount = 0;
    self.myActivity = 0;
    self.newFanCount = 0;
    self.newFollowCount = 0;
    self.newMessageCount = 0;
    self.newFeedCount = 0;
    self.newNoticeCount = 0;
  }
  return self;
}
static PBStatistic* defaultPBStatisticInstance = nil;
+ (void) initialize {
  if (self == [PBStatistic class]) {
    defaultPBStatisticInstance = [[PBStatistic alloc] init];
  }
}
+ (PBStatistic*) defaultInstance {
  return defaultPBStatisticInstance;
}
- (PBStatistic*) defaultInstance {
  return defaultPBStatisticInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFanCount) {
    [output writeInt32:1 value:self.fanCount];
  }
  if (self.hasFollowCount) {
    [output writeInt32:2 value:self.followCount];
  }
  if (self.hasMyActivity) {
    [output writeInt32:3 value:self.myActivity];
  }
  if (self.hasNewFanCount) {
    [output writeInt32:20 value:self.newFanCount];
  }
  if (self.hasNewFollowCount) {
    [output writeInt32:22 value:self.newFollowCount];
  }
  if (self.hasNewMessageCount) {
    [output writeInt32:23 value:self.newMessageCount];
  }
  if (self.hasNewFeedCount) {
    [output writeInt32:24 value:self.newFeedCount];
  }
  if (self.hasNewNoticeCount) {
    [output writeInt32:25 value:self.newNoticeCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFanCount) {
    size += computeInt32Size(1, self.fanCount);
  }
  if (self.hasFollowCount) {
    size += computeInt32Size(2, self.followCount);
  }
  if (self.hasMyActivity) {
    size += computeInt32Size(3, self.myActivity);
  }
  if (self.hasNewFanCount) {
    size += computeInt32Size(20, self.newFanCount);
  }
  if (self.hasNewFollowCount) {
    size += computeInt32Size(22, self.newFollowCount);
  }
  if (self.hasNewMessageCount) {
    size += computeInt32Size(23, self.newMessageCount);
  }
  if (self.hasNewFeedCount) {
    size += computeInt32Size(24, self.newFeedCount);
  }
  if (self.hasNewNoticeCount) {
    size += computeInt32Size(25, self.newNoticeCount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBStatistic*) parseFromData:(NSData*) data {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromData:data] build];
}
+ (PBStatistic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBStatistic*) parseFromInputStream:(NSInputStream*) input {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromInputStream:input] build];
}
+ (PBStatistic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBStatistic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromCodedInputStream:input] build];
}
+ (PBStatistic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBStatistic*)[[[PBStatistic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBStatistic_Builder*) builder {
  return [[[PBStatistic_Builder alloc] init] autorelease];
}
+ (PBStatistic_Builder*) builderWithPrototype:(PBStatistic*) prototype {
  return [[PBStatistic builder] mergeFrom:prototype];
}
- (PBStatistic_Builder*) builder {
  return [PBStatistic builder];
}
@end

@interface PBStatistic_Builder()
@property (retain) PBStatistic* result;
@end

@implementation PBStatistic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBStatistic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBStatistic_Builder*) clear {
  self.result = [[[PBStatistic alloc] init] autorelease];
  return self;
}
- (PBStatistic_Builder*) clone {
  return [PBStatistic builderWithPrototype:result];
}
- (PBStatistic*) defaultInstance {
  return [PBStatistic defaultInstance];
}
- (PBStatistic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBStatistic*) buildPartial {
  PBStatistic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBStatistic_Builder*) mergeFrom:(PBStatistic*) other {
  if (other == [PBStatistic defaultInstance]) {
    return self;
  }
  if (other.hasFanCount) {
    [self setFanCount:other.fanCount];
  }
  if (other.hasFollowCount) {
    [self setFollowCount:other.followCount];
  }
  if (other.hasMyActivity) {
    [self setMyActivity:other.myActivity];
  }
  if (other.hasNewFanCount) {
    [self setNewFanCount:other.newFanCount];
  }
  if (other.hasNewFollowCount) {
    [self setNewFollowCount:other.newFollowCount];
  }
  if (other.hasNewMessageCount) {
    [self setNewMessageCount:other.newMessageCount];
  }
  if (other.hasNewFeedCount) {
    [self setNewFeedCount:other.newFeedCount];
  }
  if (other.hasNewNoticeCount) {
    [self setNewNoticeCount:other.newNoticeCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBStatistic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBStatistic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFanCount:[input readInt32]];
        break;
      }
      case 16: {
        [self setFollowCount:[input readInt32]];
        break;
      }
      case 24: {
        [self setMyActivity:[input readInt32]];
        break;
      }
      case 160: {
        [self setNewFanCount:[input readInt32]];
        break;
      }
      case 176: {
        [self setNewFollowCount:[input readInt32]];
        break;
      }
      case 184: {
        [self setNewMessageCount:[input readInt32]];
        break;
      }
      case 192: {
        [self setNewFeedCount:[input readInt32]];
        break;
      }
      case 200: {
        [self setNewNoticeCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFanCount {
  return result.hasFanCount;
}
- (int32_t) fanCount {
  return result.fanCount;
}
- (PBStatistic_Builder*) setFanCount:(int32_t) value {
  result.hasFanCount = YES;
  result.fanCount = value;
  return self;
}
- (PBStatistic_Builder*) clearFanCount {
  result.hasFanCount = NO;
  result.fanCount = 0;
  return self;
}
- (BOOL) hasFollowCount {
  return result.hasFollowCount;
}
- (int32_t) followCount {
  return result.followCount;
}
- (PBStatistic_Builder*) setFollowCount:(int32_t) value {
  result.hasFollowCount = YES;
  result.followCount = value;
  return self;
}
- (PBStatistic_Builder*) clearFollowCount {
  result.hasFollowCount = NO;
  result.followCount = 0;
  return self;
}
- (BOOL) hasMyActivity {
  return result.hasMyActivity;
}
- (int32_t) myActivity {
  return result.myActivity;
}
- (PBStatistic_Builder*) setMyActivity:(int32_t) value {
  result.hasMyActivity = YES;
  result.myActivity = value;
  return self;
}
- (PBStatistic_Builder*) clearMyActivity {
  result.hasMyActivity = NO;
  result.myActivity = 0;
  return self;
}
- (BOOL) hasNewFanCount {
  return result.hasNewFanCount;
}
- (int32_t) newFanCount {
  return result.newFanCount;
}
- (PBStatistic_Builder*) setNewFanCount:(int32_t) value {
  result.hasNewFanCount = YES;
  result.newFanCount = value;
  return self;
}
- (PBStatistic_Builder*) clearNewFanCount {
  result.hasNewFanCount = NO;
  result.newFanCount = 0;
  return self;
}
- (BOOL) hasNewFollowCount {
  return result.hasNewFollowCount;
}
- (int32_t) newFollowCount {
  return result.newFollowCount;
}
- (PBStatistic_Builder*) setNewFollowCount:(int32_t) value {
  result.hasNewFollowCount = YES;
  result.newFollowCount = value;
  return self;
}
- (PBStatistic_Builder*) clearNewFollowCount {
  result.hasNewFollowCount = NO;
  result.newFollowCount = 0;
  return self;
}
- (BOOL) hasNewMessageCount {
  return result.hasNewMessageCount;
}
- (int32_t) newMessageCount {
  return result.newMessageCount;
}
- (PBStatistic_Builder*) setNewMessageCount:(int32_t) value {
  result.hasNewMessageCount = YES;
  result.newMessageCount = value;
  return self;
}
- (PBStatistic_Builder*) clearNewMessageCount {
  result.hasNewMessageCount = NO;
  result.newMessageCount = 0;
  return self;
}
- (BOOL) hasNewFeedCount {
  return result.hasNewFeedCount;
}
- (int32_t) newFeedCount {
  return result.newFeedCount;
}
- (PBStatistic_Builder*) setNewFeedCount:(int32_t) value {
  result.hasNewFeedCount = YES;
  result.newFeedCount = value;
  return self;
}
- (PBStatistic_Builder*) clearNewFeedCount {
  result.hasNewFeedCount = NO;
  result.newFeedCount = 0;
  return self;
}
- (BOOL) hasNewNoticeCount {
  return result.hasNewNoticeCount;
}
- (int32_t) newNoticeCount {
  return result.newNoticeCount;
}
- (PBStatistic_Builder*) setNewNoticeCount:(int32_t) value {
  result.hasNewNoticeCount = YES;
  result.newNoticeCount = value;
  return self;
}
- (PBStatistic_Builder*) clearNewNoticeCount {
  result.hasNewNoticeCount = NO;
  result.newNoticeCount = 0;
  return self;
}
@end

@interface PBUserBasic ()
@property (retain) NSString* uname;
@property (retain) NSString* nick;
@property PBUserRole role;
@property BOOL gender;
@property (retain) NSString* avatar;
@property PBUserStatus status;
@property (retain) NSString* introduction;
@property int32_t birthDate;
@property (retain) NSMutableArray* mutableTagsList;
@property (retain) NSMutableArray* mutablePasswordList;
@property PBRelation relation;
@property (retain) NSString* mark;
@end

@implementation PBUserBasic

- (BOOL) hasUname {
  return !!hasUname_;
}
- (void) setHasUname:(BOOL) value {
  hasUname_ = !!value;
}
@synthesize uname;
- (BOOL) hasNick {
  return !!hasNick_;
}
- (void) setHasNick:(BOOL) value {
  hasNick_ = !!value;
}
@synthesize nick;
- (BOOL) hasRole {
  return !!hasRole_;
}
- (void) setHasRole:(BOOL) value {
  hasRole_ = !!value;
}
@synthesize role;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value {
  hasGender_ = !!value;
}
- (BOOL) gender {
  return !!gender_;
}
- (void) setGender:(BOOL) value {
  gender_ = !!value;
}
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) value {
  hasAvatar_ = !!value;
}
@synthesize avatar;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (BOOL) hasIntroduction {
  return !!hasIntroduction_;
}
- (void) setHasIntroduction:(BOOL) value {
  hasIntroduction_ = !!value;
}
@synthesize introduction;
- (BOOL) hasBirthDate {
  return !!hasBirthDate_;
}
- (void) setHasBirthDate:(BOOL) value {
  hasBirthDate_ = !!value;
}
@synthesize birthDate;
@synthesize mutableTagsList;
@synthesize mutablePasswordList;
- (BOOL) hasRelation {
  return !!hasRelation_;
}
- (void) setHasRelation:(BOOL) value {
  hasRelation_ = !!value;
}
@synthesize relation;
- (BOOL) hasMark {
  return !!hasMark_;
}
- (void) setHasMark:(BOOL) value {
  hasMark_ = !!value;
}
@synthesize mark;
- (void) dealloc {
  self.uname = nil;
  self.nick = nil;
  self.avatar = nil;
  self.introduction = nil;
  self.mutableTagsList = nil;
  self.mutablePasswordList = nil;
  self.mark = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uname = @"";
    self.nick = @"";
    self.role = PBUserRoleUser;
    self.gender = NO;
    self.avatar = @"";
    self.status = PBUserStatusOffline;
    self.introduction = @"";
    self.birthDate = 0;
    self.relation = PBRelationStrange;
    self.mark = @"";
  }
  return self;
}
static PBUserBasic* defaultPBUserBasicInstance = nil;
+ (void) initialize {
  if (self == [PBUserBasic class]) {
    defaultPBUserBasicInstance = [[PBUserBasic alloc] init];
  }
}
+ (PBUserBasic*) defaultInstance {
  return defaultPBUserBasicInstance;
}
- (PBUserBasic*) defaultInstance {
  return defaultPBUserBasicInstance;
}
- (NSArray*) tagsList {
  return mutableTagsList;
}
- (NSString*) tagsAtIndex:(int32_t) index {
  id value = [mutableTagsList objectAtIndex:index];
  return value;
}
- (NSArray*) passwordList {
  return mutablePasswordList;
}
- (NSString*) passwordAtIndex:(int32_t) index {
  id value = [mutablePasswordList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasUname) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUname) {
    [output writeString:2 value:self.uname];
  }
  if (self.hasNick) {
    [output writeString:3 value:self.nick];
  }
  if (self.hasRole) {
    [output writeEnum:4 value:self.role];
  }
  if (self.hasGender) {
    [output writeBool:5 value:self.gender];
  }
  if (self.hasAvatar) {
    [output writeString:6 value:self.avatar];
  }
  if (self.hasStatus) {
    [output writeEnum:7 value:self.status];
  }
  if (self.hasIntroduction) {
    [output writeString:8 value:self.introduction];
  }
  if (self.hasBirthDate) {
    [output writeInt32:9 value:self.birthDate];
  }
  for (NSString* element in self.mutableTagsList) {
    [output writeString:10 value:element];
  }
  for (NSString* element in self.mutablePasswordList) {
    [output writeString:11 value:element];
  }
  if (self.hasRelation) {
    [output writeEnum:20 value:self.relation];
  }
  if (self.hasMark) {
    [output writeString:21 value:self.mark];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUname) {
    size += computeStringSize(2, self.uname);
  }
  if (self.hasNick) {
    size += computeStringSize(3, self.nick);
  }
  if (self.hasRole) {
    size += computeEnumSize(4, self.role);
  }
  if (self.hasGender) {
    size += computeBoolSize(5, self.gender);
  }
  if (self.hasAvatar) {
    size += computeStringSize(6, self.avatar);
  }
  if (self.hasStatus) {
    size += computeEnumSize(7, self.status);
  }
  if (self.hasIntroduction) {
    size += computeStringSize(8, self.introduction);
  }
  if (self.hasBirthDate) {
    size += computeInt32Size(9, self.birthDate);
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableTagsList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableTagsList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutablePasswordList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutablePasswordList.count;
  }
  if (self.hasRelation) {
    size += computeEnumSize(20, self.relation);
  }
  if (self.hasMark) {
    size += computeStringSize(21, self.mark);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBUserBasic*) parseFromData:(NSData*) data {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromData:data] build];
}
+ (PBUserBasic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUserBasic*) parseFromInputStream:(NSInputStream*) input {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromInputStream:input] build];
}
+ (PBUserBasic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserBasic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromCodedInputStream:input] build];
}
+ (PBUserBasic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUserBasic*)[[[PBUserBasic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserBasic_Builder*) builder {
  return [[[PBUserBasic_Builder alloc] init] autorelease];
}
+ (PBUserBasic_Builder*) builderWithPrototype:(PBUserBasic*) prototype {
  return [[PBUserBasic builder] mergeFrom:prototype];
}
- (PBUserBasic_Builder*) builder {
  return [PBUserBasic builder];
}
@end

@interface PBUserBasic_Builder()
@property (retain) PBUserBasic* result;
@end

@implementation PBUserBasic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBUserBasic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBUserBasic_Builder*) clear {
  self.result = [[[PBUserBasic alloc] init] autorelease];
  return self;
}
- (PBUserBasic_Builder*) clone {
  return [PBUserBasic builderWithPrototype:result];
}
- (PBUserBasic*) defaultInstance {
  return [PBUserBasic defaultInstance];
}
- (PBUserBasic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUserBasic*) buildPartial {
  PBUserBasic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBUserBasic_Builder*) mergeFrom:(PBUserBasic*) other {
  if (other == [PBUserBasic defaultInstance]) {
    return self;
  }
  if (other.hasUname) {
    [self setUname:other.uname];
  }
  if (other.hasNick) {
    [self setNick:other.nick];
  }
  if (other.hasRole) {
    [self setRole:other.role];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasIntroduction) {
    [self setIntroduction:other.introduction];
  }
  if (other.hasBirthDate) {
    [self setBirthDate:other.birthDate];
  }
  if (other.mutableTagsList.count > 0) {
    if (result.mutableTagsList == nil) {
      result.mutableTagsList = [NSMutableArray array];
    }
    [result.mutableTagsList addObjectsFromArray:other.mutableTagsList];
  }
  if (other.mutablePasswordList.count > 0) {
    if (result.mutablePasswordList == nil) {
      result.mutablePasswordList = [NSMutableArray array];
    }
    [result.mutablePasswordList addObjectsFromArray:other.mutablePasswordList];
  }
  if (other.hasRelation) {
    [self setRelation:other.relation];
  }
  if (other.hasMark) {
    [self setMark:other.mark];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUserBasic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUserBasic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        [self setUname:[input readString]];
        break;
      }
      case 26: {
        [self setNick:[input readString]];
        break;
      }
      case 32: {
        int32_t value = [input readEnum];
        if (PBUserRoleIsValidValue(value)) {
          [self setRole:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setGender:[input readBool]];
        break;
      }
      case 50: {
        [self setAvatar:[input readString]];
        break;
      }
      case 56: {
        int32_t value = [input readEnum];
        if (PBUserStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 66: {
        [self setIntroduction:[input readString]];
        break;
      }
      case 72: {
        [self setBirthDate:[input readInt32]];
        break;
      }
      case 82: {
        [self addTags:[input readString]];
        break;
      }
      case 90: {
        [self addPassword:[input readString]];
        break;
      }
      case 160: {
        int32_t value = [input readEnum];
        if (PBRelationIsValidValue(value)) {
          [self setRelation:value];
        } else {
          [unknownFields mergeVarintField:20 value:value];
        }
        break;
      }
      case 170: {
        [self setMark:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUname {
  return result.hasUname;
}
- (NSString*) uname {
  return result.uname;
}
- (PBUserBasic_Builder*) setUname:(NSString*) value {
  result.hasUname = YES;
  result.uname = value;
  return self;
}
- (PBUserBasic_Builder*) clearUname {
  result.hasUname = NO;
  result.uname = @"";
  return self;
}
- (BOOL) hasNick {
  return result.hasNick;
}
- (NSString*) nick {
  return result.nick;
}
- (PBUserBasic_Builder*) setNick:(NSString*) value {
  result.hasNick = YES;
  result.nick = value;
  return self;
}
- (PBUserBasic_Builder*) clearNick {
  result.hasNick = NO;
  result.nick = @"";
  return self;
}
- (BOOL) hasRole {
  return result.hasRole;
}
- (PBUserRole) role {
  return result.role;
}
- (PBUserBasic_Builder*) setRole:(PBUserRole) value {
  result.hasRole = YES;
  result.role = value;
  return self;
}
- (PBUserBasic_Builder*) clearRole {
  result.hasRole = NO;
  result.role = PBUserRoleUser;
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (BOOL) gender {
  return result.gender;
}
- (PBUserBasic_Builder*) setGender:(BOOL) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (PBUserBasic_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = NO;
  return self;
}
- (BOOL) hasAvatar {
  return result.hasAvatar;
}
- (NSString*) avatar {
  return result.avatar;
}
- (PBUserBasic_Builder*) setAvatar:(NSString*) value {
  result.hasAvatar = YES;
  result.avatar = value;
  return self;
}
- (PBUserBasic_Builder*) clearAvatar {
  result.hasAvatar = NO;
  result.avatar = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (PBUserStatus) status {
  return result.status;
}
- (PBUserBasic_Builder*) setStatus:(PBUserStatus) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (PBUserBasic_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = PBUserStatusOffline;
  return self;
}
- (BOOL) hasIntroduction {
  return result.hasIntroduction;
}
- (NSString*) introduction {
  return result.introduction;
}
- (PBUserBasic_Builder*) setIntroduction:(NSString*) value {
  result.hasIntroduction = YES;
  result.introduction = value;
  return self;
}
- (PBUserBasic_Builder*) clearIntroduction {
  result.hasIntroduction = NO;
  result.introduction = @"";
  return self;
}
- (BOOL) hasBirthDate {
  return result.hasBirthDate;
}
- (int32_t) birthDate {
  return result.birthDate;
}
- (PBUserBasic_Builder*) setBirthDate:(int32_t) value {
  result.hasBirthDate = YES;
  result.birthDate = value;
  return self;
}
- (PBUserBasic_Builder*) clearBirthDate {
  result.hasBirthDate = NO;
  result.birthDate = 0;
  return self;
}
- (NSArray*) tagsList {
  if (result.mutableTagsList == nil) {
    return [NSArray array];
  }
  return result.mutableTagsList;
}
- (NSString*) tagsAtIndex:(int32_t) index {
  return [result tagsAtIndex:index];
}
- (PBUserBasic_Builder*) replaceTagsAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableTagsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBUserBasic_Builder*) addTags:(NSString*) value {
  if (result.mutableTagsList == nil) {
    result.mutableTagsList = [NSMutableArray array];
  }
  [result.mutableTagsList addObject:value];
  return self;
}
- (PBUserBasic_Builder*) addAllTags:(NSArray*) values {
  if (result.mutableTagsList == nil) {
    result.mutableTagsList = [NSMutableArray array];
  }
  [result.mutableTagsList addObjectsFromArray:values];
  return self;
}
- (PBUserBasic_Builder*) clearTagsList {
  result.mutableTagsList = nil;
  return self;
}
- (NSArray*) passwordList {
  if (result.mutablePasswordList == nil) {
    return [NSArray array];
  }
  return result.mutablePasswordList;
}
- (NSString*) passwordAtIndex:(int32_t) index {
  return [result passwordAtIndex:index];
}
- (PBUserBasic_Builder*) replacePasswordAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutablePasswordList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PBUserBasic_Builder*) addPassword:(NSString*) value {
  if (result.mutablePasswordList == nil) {
    result.mutablePasswordList = [NSMutableArray array];
  }
  [result.mutablePasswordList addObject:value];
  return self;
}
- (PBUserBasic_Builder*) addAllPassword:(NSArray*) values {
  if (result.mutablePasswordList == nil) {
    result.mutablePasswordList = [NSMutableArray array];
  }
  [result.mutablePasswordList addObjectsFromArray:values];
  return self;
}
- (PBUserBasic_Builder*) clearPasswordList {
  result.mutablePasswordList = nil;
  return self;
}
- (BOOL) hasRelation {
  return result.hasRelation;
}
- (PBRelation) relation {
  return result.relation;
}
- (PBUserBasic_Builder*) setRelation:(PBRelation) value {
  result.hasRelation = YES;
  result.relation = value;
  return self;
}
- (PBUserBasic_Builder*) clearRelation {
  result.hasRelation = NO;
  result.relation = PBRelationStrange;
  return self;
}
- (BOOL) hasMark {
  return result.hasMark;
}
- (NSString*) mark {
  return result.mark;
}
- (PBUserBasic_Builder*) setMark:(NSString*) value {
  result.hasMark = YES;
  result.mark = value;
  return self;
}
- (PBUserBasic_Builder*) clearMark {
  result.hasMark = NO;
  result.mark = @"";
  return self;
}
@end

@interface PBUser ()
@property (retain) NSString* uid;
@property (retain) PBUserBasic* basicInfo;
@property (retain) PBRegistration* regInfo;
@property (retain) PBLog* logInfo;
@property (retain) PBDevice* deviceInfo;
@property (retain) PBSNS* snsInfo;
@property (retain) PBStatistic* statistic;
@end

@implementation PBUser

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) value {
  hasUid_ = !!value;
}
@synthesize uid;
- (BOOL) hasBasicInfo {
  return !!hasBasicInfo_;
}
- (void) setHasBasicInfo:(BOOL) value {
  hasBasicInfo_ = !!value;
}
@synthesize basicInfo;
- (BOOL) hasRegInfo {
  return !!hasRegInfo_;
}
- (void) setHasRegInfo:(BOOL) value {
  hasRegInfo_ = !!value;
}
@synthesize regInfo;
- (BOOL) hasLogInfo {
  return !!hasLogInfo_;
}
- (void) setHasLogInfo:(BOOL) value {
  hasLogInfo_ = !!value;
}
@synthesize logInfo;
- (BOOL) hasDeviceInfo {
  return !!hasDeviceInfo_;
}
- (void) setHasDeviceInfo:(BOOL) value {
  hasDeviceInfo_ = !!value;
}
@synthesize deviceInfo;
- (BOOL) hasSnsInfo {
  return !!hasSnsInfo_;
}
- (void) setHasSnsInfo:(BOOL) value {
  hasSnsInfo_ = !!value;
}
@synthesize snsInfo;
- (BOOL) hasStatistic {
  return !!hasStatistic_;
}
- (void) setHasStatistic:(BOOL) value {
  hasStatistic_ = !!value;
}
@synthesize statistic;
- (void) dealloc {
  self.uid = nil;
  self.basicInfo = nil;
  self.regInfo = nil;
  self.logInfo = nil;
  self.deviceInfo = nil;
  self.snsInfo = nil;
  self.statistic = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uid = @"";
    self.basicInfo = [PBUserBasic defaultInstance];
    self.regInfo = [PBRegistration defaultInstance];
    self.logInfo = [PBLog defaultInstance];
    self.deviceInfo = [PBDevice defaultInstance];
    self.snsInfo = [PBSNS defaultInstance];
    self.statistic = [PBStatistic defaultInstance];
  }
  return self;
}
static PBUser* defaultPBUserInstance = nil;
+ (void) initialize {
  if (self == [PBUser class]) {
    defaultPBUserInstance = [[PBUser alloc] init];
  }
}
+ (PBUser*) defaultInstance {
  return defaultPBUserInstance;
}
- (PBUser*) defaultInstance {
  return defaultPBUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasBasicInfo) {
    return NO;
  }
  if (!self.basicInfo.isInitialized) {
    return NO;
  }
  if (self.hasRegInfo) {
    if (!self.regInfo.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeString:1 value:self.uid];
  }
  if (self.hasBasicInfo) {
    [output writeMessage:2 value:self.basicInfo];
  }
  if (self.hasRegInfo) {
    [output writeMessage:3 value:self.regInfo];
  }
  if (self.hasLogInfo) {
    [output writeMessage:4 value:self.logInfo];
  }
  if (self.hasDeviceInfo) {
    [output writeMessage:5 value:self.deviceInfo];
  }
  if (self.hasSnsInfo) {
    [output writeMessage:6 value:self.snsInfo];
  }
  if (self.hasStatistic) {
    [output writeMessage:7 value:self.statistic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasUid) {
    size += computeStringSize(1, self.uid);
  }
  if (self.hasBasicInfo) {
    size += computeMessageSize(2, self.basicInfo);
  }
  if (self.hasRegInfo) {
    size += computeMessageSize(3, self.regInfo);
  }
  if (self.hasLogInfo) {
    size += computeMessageSize(4, self.logInfo);
  }
  if (self.hasDeviceInfo) {
    size += computeMessageSize(5, self.deviceInfo);
  }
  if (self.hasSnsInfo) {
    size += computeMessageSize(6, self.snsInfo);
  }
  if (self.hasStatistic) {
    size += computeMessageSize(7, self.statistic);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PBUser*) parseFromData:(NSData*) data {
  return (PBUser*)[[[PBUser builder] mergeFromData:data] build];
}
+ (PBUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUser_Builder*) builder {
  return [[[PBUser_Builder alloc] init] autorelease];
}
+ (PBUser_Builder*) builderWithPrototype:(PBUser*) prototype {
  return [[PBUser builder] mergeFrom:prototype];
}
- (PBUser_Builder*) builder {
  return [PBUser builder];
}
@end

@interface PBUser_Builder()
@property (retain) PBUser* result;
@end

@implementation PBUser_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PBUser alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PBUser_Builder*) clear {
  self.result = [[[PBUser alloc] init] autorelease];
  return self;
}
- (PBUser_Builder*) clone {
  return [PBUser builderWithPrototype:result];
}
- (PBUser*) defaultInstance {
  return [PBUser defaultInstance];
}
- (PBUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUser*) buildPartial {
  PBUser* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PBUser_Builder*) mergeFrom:(PBUser*) other {
  if (other == [PBUser defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasBasicInfo) {
    [self mergeBasicInfo:other.basicInfo];
  }
  if (other.hasRegInfo) {
    [self mergeRegInfo:other.regInfo];
  }
  if (other.hasLogInfo) {
    [self mergeLogInfo:other.logInfo];
  }
  if (other.hasDeviceInfo) {
    [self mergeDeviceInfo:other.deviceInfo];
  }
  if (other.hasSnsInfo) {
    [self mergeSnsInfo:other.snsInfo];
  }
  if (other.hasStatistic) {
    [self mergeStatistic:other.statistic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUser_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUid:[input readString]];
        break;
      }
      case 18: {
        PBUserBasic_Builder* subBuilder = [PBUserBasic builder];
        if (self.hasBasicInfo) {
          [subBuilder mergeFrom:self.basicInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBasicInfo:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBRegistration_Builder* subBuilder = [PBRegistration builder];
        if (self.hasRegInfo) {
          [subBuilder mergeFrom:self.regInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRegInfo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        PBLog_Builder* subBuilder = [PBLog builder];
        if (self.hasLogInfo) {
          [subBuilder mergeFrom:self.logInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLogInfo:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        PBDevice_Builder* subBuilder = [PBDevice builder];
        if (self.hasDeviceInfo) {
          [subBuilder mergeFrom:self.deviceInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDeviceInfo:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        PBSNS_Builder* subBuilder = [PBSNS builder];
        if (self.hasSnsInfo) {
          [subBuilder mergeFrom:self.snsInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setSnsInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        PBStatistic_Builder* subBuilder = [PBStatistic builder];
        if (self.hasStatistic) {
          [subBuilder mergeFrom:self.statistic];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setStatistic:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return result.hasUid;
}
- (NSString*) uid {
  return result.uid;
}
- (PBUser_Builder*) setUid:(NSString*) value {
  result.hasUid = YES;
  result.uid = value;
  return self;
}
- (PBUser_Builder*) clearUid {
  result.hasUid = NO;
  result.uid = @"";
  return self;
}
- (BOOL) hasBasicInfo {
  return result.hasBasicInfo;
}
- (PBUserBasic*) basicInfo {
  return result.basicInfo;
}
- (PBUser_Builder*) setBasicInfo:(PBUserBasic*) value {
  result.hasBasicInfo = YES;
  result.basicInfo = value;
  return self;
}
- (PBUser_Builder*) setBasicInfoBuilder:(PBUserBasic_Builder*) builderForValue {
  return [self setBasicInfo:[builderForValue build]];
}
- (PBUser_Builder*) mergeBasicInfo:(PBUserBasic*) value {
  if (result.hasBasicInfo &&
      result.basicInfo != [PBUserBasic defaultInstance]) {
    result.basicInfo =
      [[[PBUserBasic builderWithPrototype:result.basicInfo] mergeFrom:value] buildPartial];
  } else {
    result.basicInfo = value;
  }
  result.hasBasicInfo = YES;
  return self;
}
- (PBUser_Builder*) clearBasicInfo {
  result.hasBasicInfo = NO;
  result.basicInfo = [PBUserBasic defaultInstance];
  return self;
}
- (BOOL) hasRegInfo {
  return result.hasRegInfo;
}
- (PBRegistration*) regInfo {
  return result.regInfo;
}
- (PBUser_Builder*) setRegInfo:(PBRegistration*) value {
  result.hasRegInfo = YES;
  result.regInfo = value;
  return self;
}
- (PBUser_Builder*) setRegInfoBuilder:(PBRegistration_Builder*) builderForValue {
  return [self setRegInfo:[builderForValue build]];
}
- (PBUser_Builder*) mergeRegInfo:(PBRegistration*) value {
  if (result.hasRegInfo &&
      result.regInfo != [PBRegistration defaultInstance]) {
    result.regInfo =
      [[[PBRegistration builderWithPrototype:result.regInfo] mergeFrom:value] buildPartial];
  } else {
    result.regInfo = value;
  }
  result.hasRegInfo = YES;
  return self;
}
- (PBUser_Builder*) clearRegInfo {
  result.hasRegInfo = NO;
  result.regInfo = [PBRegistration defaultInstance];
  return self;
}
- (BOOL) hasLogInfo {
  return result.hasLogInfo;
}
- (PBLog*) logInfo {
  return result.logInfo;
}
- (PBUser_Builder*) setLogInfo:(PBLog*) value {
  result.hasLogInfo = YES;
  result.logInfo = value;
  return self;
}
- (PBUser_Builder*) setLogInfoBuilder:(PBLog_Builder*) builderForValue {
  return [self setLogInfo:[builderForValue build]];
}
- (PBUser_Builder*) mergeLogInfo:(PBLog*) value {
  if (result.hasLogInfo &&
      result.logInfo != [PBLog defaultInstance]) {
    result.logInfo =
      [[[PBLog builderWithPrototype:result.logInfo] mergeFrom:value] buildPartial];
  } else {
    result.logInfo = value;
  }
  result.hasLogInfo = YES;
  return self;
}
- (PBUser_Builder*) clearLogInfo {
  result.hasLogInfo = NO;
  result.logInfo = [PBLog defaultInstance];
  return self;
}
- (BOOL) hasDeviceInfo {
  return result.hasDeviceInfo;
}
- (PBDevice*) deviceInfo {
  return result.deviceInfo;
}
- (PBUser_Builder*) setDeviceInfo:(PBDevice*) value {
  result.hasDeviceInfo = YES;
  result.deviceInfo = value;
  return self;
}
- (PBUser_Builder*) setDeviceInfoBuilder:(PBDevice_Builder*) builderForValue {
  return [self setDeviceInfo:[builderForValue build]];
}
- (PBUser_Builder*) mergeDeviceInfo:(PBDevice*) value {
  if (result.hasDeviceInfo &&
      result.deviceInfo != [PBDevice defaultInstance]) {
    result.deviceInfo =
      [[[PBDevice builderWithPrototype:result.deviceInfo] mergeFrom:value] buildPartial];
  } else {
    result.deviceInfo = value;
  }
  result.hasDeviceInfo = YES;
  return self;
}
- (PBUser_Builder*) clearDeviceInfo {
  result.hasDeviceInfo = NO;
  result.deviceInfo = [PBDevice defaultInstance];
  return self;
}
- (BOOL) hasSnsInfo {
  return result.hasSnsInfo;
}
- (PBSNS*) snsInfo {
  return result.snsInfo;
}
- (PBUser_Builder*) setSnsInfo:(PBSNS*) value {
  result.hasSnsInfo = YES;
  result.snsInfo = value;
  return self;
}
- (PBUser_Builder*) setSnsInfoBuilder:(PBSNS_Builder*) builderForValue {
  return [self setSnsInfo:[builderForValue build]];
}
- (PBUser_Builder*) mergeSnsInfo:(PBSNS*) value {
  if (result.hasSnsInfo &&
      result.snsInfo != [PBSNS defaultInstance]) {
    result.snsInfo =
      [[[PBSNS builderWithPrototype:result.snsInfo] mergeFrom:value] buildPartial];
  } else {
    result.snsInfo = value;
  }
  result.hasSnsInfo = YES;
  return self;
}
- (PBUser_Builder*) clearSnsInfo {
  result.hasSnsInfo = NO;
  result.snsInfo = [PBSNS defaultInstance];
  return self;
}
- (BOOL) hasStatistic {
  return result.hasStatistic;
}
- (PBStatistic*) statistic {
  return result.statistic;
}
- (PBUser_Builder*) setStatistic:(PBStatistic*) value {
  result.hasStatistic = YES;
  result.statistic = value;
  return self;
}
- (PBUser_Builder*) setStatisticBuilder:(PBStatistic_Builder*) builderForValue {
  return [self setStatistic:[builderForValue build]];
}
- (PBUser_Builder*) mergeStatistic:(PBStatistic*) value {
  if (result.hasStatistic &&
      result.statistic != [PBStatistic defaultInstance]) {
    result.statistic =
      [[[PBStatistic builderWithPrototype:result.statistic] mergeFrom:value] buildPartial];
  } else {
    result.statistic = value;
  }
  result.hasStatistic = YES;
  return self;
}
- (PBUser_Builder*) clearStatistic {
  result.hasStatistic = NO;
  result.statistic = [PBStatistic defaultInstance];
  return self;
}
@end

